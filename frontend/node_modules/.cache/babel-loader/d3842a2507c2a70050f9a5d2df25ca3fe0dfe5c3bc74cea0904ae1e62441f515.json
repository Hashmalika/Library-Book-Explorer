{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\OneDrive\\\\Pictures\\\\mycodeproject\\\\my project\\\\Library  management system\\\\library-book-explorer\\\\frontend\\\\src\\\\components\\\\GenrePieChart.js\";\n// // // import React from \"react\";\n// // import {\n// //   PieChart,\n// //   Pie,\n// //   Cell,\n// //   Tooltip,\n// //   Legend,\n// //   ResponsiveContainer,\n// // } from \"recharts\";\n\n// // const COLORS = [\n// //   \"#6366f1\", // Indigo\n// //   \"#10b981\", // Emerald\n// //   \"#f59e0b\", // Amber\n// //   \"#ef4444\", // Red\n// //   \"#3b82f6\", // Blue\n// //   \"#a855f7\", // Purple\n// //   \"#14b8a6\", // Teal\n// // ];\n\n// // export default function GenrePieChart({ books }) {\n// //   const genreCount = {};\n// //   books.forEach((book) => {\n// //     genreCount[book.genre] = (genreCount[book.genre] || 0) + 1;\n// //   });\n\n// //   const data = Object.entries(genreCount).map(([name, value]) => ({\n// //     name,\n// //     value,\n// //   }));\n\n// //   return (\n// //     <div className=\"chart-container\">\n// //       <h2 className=\"chart-title\">\n// //         ðŸ“ˆ Genre Distribution ({data.length} genres)\n// //       </h2>\n\n// //       <ResponsiveContainer width=\"100%\" height={300}>\n// //         <PieChart>\n// //           <Pie\n// //             data={data}\n// //             cx=\"50%\"\n// //             cy=\"50%\"\n// //             outerRadius={100}\n// //             label\n// //             dataKey=\"value\"\n// //           >\n// //             {data.map((entry, index) => (\n// //               <Cell key={index} fill={COLORS[index % COLORS.length]} />\n// //             ))}\n// //           </Pie>\n// //           <Tooltip />\n// //           <Legend />\n// //         </PieChart>\n// //       </ResponsiveContainer>\n// //     </div>\n// //   );\n// // }\n\n// // GenrePieChart.js\n// import { PieChart, Pie, Cell, Legend, Tooltip, ResponsiveContainer } from 'recharts';\n\n// const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff8042', '#8dd1e1', '#d0ed57', '#a4de6c', '#ffbb28'];\n\n// export default function GenrePieChart({ books }) {\n//   const genreCount = books.reduce((acc, book) => {\n//     acc[book.genre] = (acc[book.genre] || 0) + 1;\n//     return acc;\n//   }, {});\n\n//   const data = Object.entries(genreCount).map(([genre, count]) => ({ name: genre, value: count }));\n\n//   return (\n//     <div style={{ width: '100%', height: 400 }}>\n//       <h2 style={{ textAlign: 'center' }}>ðŸ“š Genre Distribution</h2>\n//       <ResponsiveContainer>\n//         <PieChart>\n//           <Pie data={data} cx=\"50%\" cy=\"50%\" outerRadius={120} label dataKey=\"value\">\n//             {data.map((entry, index) => (\n//               <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n//             ))}\n//           </Pie>\n//           <Tooltip />\n//           <Legend layout=\"vertical\" align=\"right\" verticalAlign=\"middle\" />\n//         </PieChart>\n//       </ResponsiveContainer>\n//     </div>\n//   );\n// }\n\nimport React from \"react\";\nimport { PieChart, Pie, Cell, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = [\"#4caf50\", \"#2196f3\", \"#ff9800\", \"#f44336\", \"#9c27b0\", \"#795548\", \"#607d8b\", \"#00bcd4\", \"#8bc34a\", \"#ffc107\"];\nexport default function GenrePieChart({\n  books\n}) {\n  const genreCount = {};\n  books.forEach(book => {\n    genreCount[book.genre] = (genreCount[book.genre] || 0) + 1;\n  });\n  const data = Object.entries(genreCount).map(([genre, count]) => ({\n    name: genre,\n    value: count\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"chart-title\",\n      children: \"\\uD83D\\uDCDA Genre Distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(PieChart, {\n        children: [/*#__PURE__*/_jsxDEV(Pie, {\n          dataKey: \"value\",\n          data: data,\n          cx: \"50%\",\n          cy: \"50%\",\n          outerRadius: 90,\n          label: true,\n          children: data.map((_, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: COLORS[index % COLORS.length]\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_c = GenrePieChart;\nvar _c;\n$RefreshReg$(_c, \"GenrePieChart\");","map":{"version":3,"names":["React","PieChart","Pie","Cell","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","COLORS","GenrePieChart","books","genreCount","forEach","book","genre","data","Object","entries","map","count","name","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","dataKey","cx","cy","outerRadius","label","_","index","fill","length","_c","$RefreshReg$"],"sources":["C:/Users/asus/OneDrive/Pictures/mycodeproject/my project/Library  management system/library-book-explorer/frontend/src/components/GenrePieChart.js"],"sourcesContent":["// // // import React from \"react\";\r\n// // import {\r\n// //   PieChart,\r\n// //   Pie,\r\n// //   Cell,\r\n// //   Tooltip,\r\n// //   Legend,\r\n// //   ResponsiveContainer,\r\n// // } from \"recharts\";\r\n\r\n\r\n// // const COLORS = [\r\n// //   \"#6366f1\", // Indigo\r\n// //   \"#10b981\", // Emerald\r\n// //   \"#f59e0b\", // Amber\r\n// //   \"#ef4444\", // Red\r\n// //   \"#3b82f6\", // Blue\r\n// //   \"#a855f7\", // Purple\r\n// //   \"#14b8a6\", // Teal\r\n// // ];\r\n\r\n// // export default function GenrePieChart({ books }) {\r\n// //   const genreCount = {};\r\n// //   books.forEach((book) => {\r\n// //     genreCount[book.genre] = (genreCount[book.genre] || 0) + 1;\r\n// //   });\r\n\r\n// //   const data = Object.entries(genreCount).map(([name, value]) => ({\r\n// //     name,\r\n// //     value,\r\n// //   }));\r\n\r\n// //   return (\r\n// //     <div className=\"chart-container\">\r\n// //       <h2 className=\"chart-title\">\r\n// //         ðŸ“ˆ Genre Distribution ({data.length} genres)\r\n// //       </h2>\r\n\r\n// //       <ResponsiveContainer width=\"100%\" height={300}>\r\n// //         <PieChart>\r\n// //           <Pie\r\n// //             data={data}\r\n// //             cx=\"50%\"\r\n// //             cy=\"50%\"\r\n// //             outerRadius={100}\r\n// //             label\r\n// //             dataKey=\"value\"\r\n// //           >\r\n// //             {data.map((entry, index) => (\r\n// //               <Cell key={index} fill={COLORS[index % COLORS.length]} />\r\n// //             ))}\r\n// //           </Pie>\r\n// //           <Tooltip />\r\n// //           <Legend />\r\n// //         </PieChart>\r\n// //       </ResponsiveContainer>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n\r\n// // GenrePieChart.js\r\n// import { PieChart, Pie, Cell, Legend, Tooltip, ResponsiveContainer } from 'recharts';\r\n\r\n// const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff8042', '#8dd1e1', '#d0ed57', '#a4de6c', '#ffbb28'];\r\n\r\n// export default function GenrePieChart({ books }) {\r\n//   const genreCount = books.reduce((acc, book) => {\r\n//     acc[book.genre] = (acc[book.genre] || 0) + 1;\r\n//     return acc;\r\n//   }, {});\r\n\r\n//   const data = Object.entries(genreCount).map(([genre, count]) => ({ name: genre, value: count }));\r\n\r\n//   return (\r\n//     <div style={{ width: '100%', height: 400 }}>\r\n//       <h2 style={{ textAlign: 'center' }}>ðŸ“š Genre Distribution</h2>\r\n//       <ResponsiveContainer>\r\n//         <PieChart>\r\n//           <Pie data={data} cx=\"50%\" cy=\"50%\" outerRadius={120} label dataKey=\"value\">\r\n//             {data.map((entry, index) => (\r\n//               <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n//             ))}\r\n//           </Pie>\r\n//           <Tooltip />\r\n//           <Legend layout=\"vertical\" align=\"right\" verticalAlign=\"middle\" />\r\n//         </PieChart>\r\n//       </ResponsiveContainer>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\nimport React from \"react\";\r\nimport {\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nconst COLORS = [\r\n  \"#4caf50\",\r\n  \"#2196f3\",\r\n  \"#ff9800\",\r\n  \"#f44336\",\r\n  \"#9c27b0\",\r\n  \"#795548\",\r\n  \"#607d8b\",\r\n  \"#00bcd4\",\r\n  \"#8bc34a\",\r\n  \"#ffc107\",\r\n];\r\n\r\nexport default function GenrePieChart({ books }) {\r\n  const genreCount = {};\r\n  books.forEach((book) => {\r\n    genreCount[book.genre] = (genreCount[book.genre] || 0) + 1;\r\n  });\r\n\r\n  const data = Object.entries(genreCount).map(([genre, count]) => ({\r\n    name: genre,\r\n    value: count,\r\n  }));\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      <h2 className=\"chart-title\">ðŸ“š Genre Distribution</h2>\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <PieChart>\r\n          <Pie\r\n            dataKey=\"value\"\r\n            data={data}\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            outerRadius={90}\r\n            label\r\n          >\r\n            {data.map((_, index) => (\r\n              <Cell key={index} fill={COLORS[index % COLORS.length]} />\r\n            ))}\r\n          </Pie>\r\n          <Tooltip />\r\n          <Legend />\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}