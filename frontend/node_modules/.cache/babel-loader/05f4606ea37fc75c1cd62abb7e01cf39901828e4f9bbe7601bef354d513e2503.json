{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\OneDrive\\\\Pictures\\\\mycodeproject\\\\my project\\\\Library  management system\\\\library-book-explorer\\\\frontend\\\\src\\\\components\\\\GenrePieChart.js\";\n// // import React from \"react\";\n// import {\n//   PieChart,\n//   Pie,\n//   Cell,\n//   Tooltip,\n//   Legend,\n//   ResponsiveContainer,\n// } from \"recharts\";\n\n// const COLORS = [\n//   \"#6366f1\", // Indigo\n//   \"#10b981\", // Emerald\n//   \"#f59e0b\", // Amber\n//   \"#ef4444\", // Red\n//   \"#3b82f6\", // Blue\n//   \"#a855f7\", // Purple\n//   \"#14b8a6\", // Teal\n// ];\n\n// export default function GenrePieChart({ books }) {\n//   const genreCount = {};\n//   books.forEach((book) => {\n//     genreCount[book.genre] = (genreCount[book.genre] || 0) + 1;\n//   });\n\n//   const data = Object.entries(genreCount).map(([name, value]) => ({\n//     name,\n//     value,\n//   }));\n\n//   return (\n//     <div className=\"chart-container\">\n//       <h2 className=\"chart-title\">\n//         ðŸ“ˆ Genre Distribution ({data.length} genres)\n//       </h2>\n\n//       <ResponsiveContainer width=\"100%\" height={300}>\n//         <PieChart>\n//           <Pie\n//             data={data}\n//             cx=\"50%\"\n//             cy=\"50%\"\n//             outerRadius={100}\n//             label\n//             dataKey=\"value\"\n//           >\n//             {data.map((entry, index) => (\n//               <Cell key={index} fill={COLORS[index % COLORS.length]} />\n//             ))}\n//           </Pie>\n//           <Tooltip />\n//           <Legend />\n//         </PieChart>\n//       </ResponsiveContainer>\n//     </div>\n//   );\n// }\n\n// GenrePieChart.js\nimport { PieChart, Pie, Cell, Legend, Tooltip, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff8042', '#8dd1e1', '#d0ed57', '#a4de6c', '#ffbb28'];\nexport default function GenrePieChart({\n  books\n}) {\n  const genreCount = books.reduce((acc, book) => {\n    acc[book.genre] = (acc[book.genre] || 0) + 1;\n    return acc;\n  }, {});\n  const data = Object.entries(genreCount).map(([genre, count]) => ({\n    name: genre,\n    value: count\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: 400\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"\\uD83D\\uDCDA Genre Distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      children: /*#__PURE__*/_jsxDEV(PieChart, {\n        children: [/*#__PURE__*/_jsxDEV(Pie, {\n          data: data,\n          cx: \"50%\",\n          cy: \"50%\",\n          outerRadius: 120,\n          label: true,\n          dataKey: \"value\",\n          children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: COLORS[index % COLORS.length]\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          layout: \"vertical\",\n          align: \"right\",\n          verticalAlign: \"middle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_c = GenrePieChart;\nvar _c;\n$RefreshReg$(_c, \"GenrePieChart\");","map":{"version":3,"names":["PieChart","Pie","Cell","Legend","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","COLORS","GenrePieChart","books","genreCount","reduce","acc","book","genre","data","Object","entries","map","count","name","value","style","width","height","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","cx","cy","outerRadius","label","dataKey","entry","index","fill","length","layout","align","verticalAlign","_c","$RefreshReg$"],"sources":["C:/Users/asus/OneDrive/Pictures/mycodeproject/my project/Library  management system/library-book-explorer/frontend/src/components/GenrePieChart.js"],"sourcesContent":["// // import React from \"react\";\r\n// import {\r\n//   PieChart,\r\n//   Pie,\r\n//   Cell,\r\n//   Tooltip,\r\n//   Legend,\r\n//   ResponsiveContainer,\r\n// } from \"recharts\";\r\n\r\n\r\n// const COLORS = [\r\n//   \"#6366f1\", // Indigo\r\n//   \"#10b981\", // Emerald\r\n//   \"#f59e0b\", // Amber\r\n//   \"#ef4444\", // Red\r\n//   \"#3b82f6\", // Blue\r\n//   \"#a855f7\", // Purple\r\n//   \"#14b8a6\", // Teal\r\n// ];\r\n\r\n// export default function GenrePieChart({ books }) {\r\n//   const genreCount = {};\r\n//   books.forEach((book) => {\r\n//     genreCount[book.genre] = (genreCount[book.genre] || 0) + 1;\r\n//   });\r\n\r\n//   const data = Object.entries(genreCount).map(([name, value]) => ({\r\n//     name,\r\n//     value,\r\n//   }));\r\n\r\n//   return (\r\n//     <div className=\"chart-container\">\r\n//       <h2 className=\"chart-title\">\r\n//         ðŸ“ˆ Genre Distribution ({data.length} genres)\r\n//       </h2>\r\n\r\n//       <ResponsiveContainer width=\"100%\" height={300}>\r\n//         <PieChart>\r\n//           <Pie\r\n//             data={data}\r\n//             cx=\"50%\"\r\n//             cy=\"50%\"\r\n//             outerRadius={100}\r\n//             label\r\n//             dataKey=\"value\"\r\n//           >\r\n//             {data.map((entry, index) => (\r\n//               <Cell key={index} fill={COLORS[index % COLORS.length]} />\r\n//             ))}\r\n//           </Pie>\r\n//           <Tooltip />\r\n//           <Legend />\r\n//         </PieChart>\r\n//       </ResponsiveContainer>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n// GenrePieChart.js\r\nimport { PieChart, Pie, Cell, Legend, Tooltip, ResponsiveContainer } from 'recharts';\r\n\r\nconst COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff8042', '#8dd1e1', '#d0ed57', '#a4de6c', '#ffbb28'];\r\n\r\nexport default function GenrePieChart({ books }) {\r\n  const genreCount = books.reduce((acc, book) => {\r\n    acc[book.genre] = (acc[book.genre] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  const data = Object.entries(genreCount).map(([genre, count]) => ({ name: genre, value: count }));\r\n\r\n  return (\r\n    <div style={{ width: '100%', height: 400 }}>\r\n      <h2 style={{ textAlign: 'center' }}>ðŸ“š Genre Distribution</h2>\r\n      <ResponsiveContainer>\r\n        <PieChart>\r\n          <Pie data={data} cx=\"50%\" cy=\"50%\" outerRadius={120} label dataKey=\"value\">\r\n            {data.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n            ))}\r\n          </Pie>\r\n          <Tooltip />\r\n          <Legend layout=\"vertical\" align=\"right\" verticalAlign=\"middle\" />\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}