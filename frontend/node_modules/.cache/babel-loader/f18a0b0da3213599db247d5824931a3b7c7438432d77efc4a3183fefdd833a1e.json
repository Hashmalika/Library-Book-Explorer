{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\OneDrive\\\\Pictures\\\\mycodeproject\\\\my project\\\\Library  management system\\\\library-book-explorer\\\\frontend\\\\src\\\\components\\\\AdminPanel.js\",\n  _s = $RefreshSig$();\n// import { useState } from \"react\";\n\n// export default function AdminPanel({ onBookAdded, onBookDeleted }) {\n//   const [newBook, setNewBook] = useState({\n//     id: \"\",\n//     title: \"\",\n//     author: \"\",\n//     genre: \"\",\n//     price: \"\",\n//     publishDate: \"\",\n//     available: true,\n//   });\n\n//   const handleAdd = async () => {\n//     if (!newBook.id || !newBook.title || !newBook.genre || !newBook.price || !newBook.author || !newBook.publishDate) {\n//       alert(\"Please fill all fields\");\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch(\"http://127.0.0.1:5000/api/books\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({\n//           ...newBook,\n//           price: parseFloat(newBook.price),\n//           available: newBook.available === \"true\" || newBook.available === true\n//         }),\n//       });\n\n//       if (response.ok) {\n//         const addedBook = await response.json();\n//         onBookAdded(addedBook);\n//         alert(\"Book added successfully\");\n//         setNewBook({\n//           id: \"\",\n//           title: \"\",\n//           author: \"\",\n//           genre: \"\",\n//           price: \"\",\n//           publishDate: \"\",\n//           available: true\n//         });\n//       } else {\n//         alert(\"Failed to add book\");\n//       }\n//     } catch (err) {\n//       console.error(err);\n//       alert(\"Error adding book\");\n//     }\n//   };\n\n//   const handleDelete = async () => {\n//     if (!newBook.id) {\n//       alert(\"Enter the ID of the book to delete\");\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch(`http://127.0.0.1:5000/api/books/${newBook.id}`, {\n//         method: \"DELETE\",\n//       });\n\n//       if (response.ok) {\n//         onBookDeleted(newBook.id);\n//         alert(\"Book deleted successfully\");\n//         setNewBook({ ...newBook, id: \"\" });\n//       } else {\n//         alert(\"Failed to delete book\");\n//       }\n//     } catch (err) {\n//       console.error(err);\n//       alert(\"Error deleting book\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"admin-panel\">\n//       <h2>Admin Panel</h2>\n//       <input\n//         type=\"text\"\n//         placeholder=\"ID\"\n//         value={newBook.id}\n//         onChange={(e) => setNewBook({ ...newBook, id: e.target.value })}\n//       />\n//       <input\n//         type=\"text\"\n//         placeholder=\"Title\"\n//         value={newBook.title}\n//         onChange={(e) => setNewBook({ ...newBook, title: e.target.value })}\n//       />\n//       <input\n//         type=\"text\"\n//         placeholder=\"Author\"\n//         value={newBook.author}\n//         onChange={(e) => setNewBook({ ...newBook, author: e.target.value })}\n//       />\n//       <input\n//         type=\"text\"\n//         placeholder=\"Genre\"\n//         value={newBook.genre}\n//         onChange={(e) => setNewBook({ ...newBook, genre: e.target.value })}\n//       />\n//       <input\n//         type=\"number\"\n//         placeholder=\"Price\"\n//         value={newBook.price}\n//         onChange={(e) => setNewBook({ ...newBook, price: e.target.value })}\n//       />\n//       <input\n//         type=\"date\"\n//         placeholder=\"Publish Date\"\n//         value={newBook.publishDate}\n//         onChange={(e) => setNewBook({ ...newBook, publishDate: e.target.value })}\n//       />\n//       <select\n//         value={newBook.available}\n//         onChange={(e) =>\n//           setNewBook({\n//             ...newBook,\n//             available: e.target.value === \"true\" ? true : false,\n//           })\n//         }\n//       >\n//         <option value=\"true\">Available</option>\n//         <option value=\"false\">Borrowed</option>\n//       </select>\n//       <div style={{ marginTop: \"8px\" }}>\n//         <button className=\"admin-button\" onClick={handleAdd}>\n//           Add Book\n//         </button>\n//         <button className=\"admin-button\" onClick={handleDelete}>\n//           Delete Book by ID\n//         </button>\n\n//       </div>\n//     </div>\n//   );\n// }\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminPanel({\n  onBookAdded,\n  onBookDeleted\n}) {\n  _s();\n  const [newBook, setNewBook] = useState({\n    id: \"\",\n    title: \"\",\n    author: \"\",\n    genre: \"\",\n    price: \"\",\n    publishDate: \"\",\n    available: true,\n    rating: \"\"\n  });\n  const [updateData, setUpdateData] = useState({\n    id: \"\",\n    title: \"\",\n    price: \"\",\n    rating: \"\",\n    available: true\n  });\n  const handleAdd = async () => {\n    const {\n      id,\n      title,\n      author,\n      genre,\n      price,\n      publishDate,\n      available,\n      rating\n    } = newBook;\n    if (!id || !title || !genre || !price || !author || !publishDate || !rating) {\n      alert(\"Please fill all fields\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/books\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...newBook,\n          price: parseFloat(price),\n          rating: parseFloat(rating),\n          available: available === \"true\" || available === true\n        })\n      });\n      if (response.ok) {\n        const addedBook = await response.json();\n        onBookAdded(addedBook);\n        alert(\"Book added successfully\");\n        setNewBook({\n          id: \"\",\n          title: \"\",\n          author: \"\",\n          genre: \"\",\n          price: \"\",\n          publishDate: \"\",\n          available: true,\n          rating: \"\"\n        });\n      } else {\n        alert(\"Failed to add book\");\n      }\n    } catch (err) {\n      console.error(err);\n      alert(\"Error adding book\");\n    }\n  };\n  const handleDelete = async () => {\n    if (!newBook.id) {\n      alert(\"Enter the ID of the book to delete\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/api/books/${newBook.id}`, {\n        method: \"DELETE\"\n      });\n      if (response.ok) {\n        onBookDeleted(newBook.id);\n        alert(\"Book deleted successfully\");\n        setNewBook({\n          ...newBook,\n          id: \"\"\n        });\n      } else {\n        alert(\"Failed to delete book\");\n      }\n    } catch (err) {\n      console.error(err);\n      alert(\"Error deleting book\");\n    }\n  };\n  const handleUpdate = async () => {\n    const {\n      id,\n      title,\n      price,\n      rating,\n      available\n    } = updateData;\n    if (!id || !title || !price || !rating) {\n      alert(\"Please fill all update fields\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/api/books/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title,\n          price: parseFloat(price),\n          rating: parseFloat(rating),\n          available: available === \"true\" || available === true\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        alert(result.message || \"Book updated successfully\");\n        onBookAdded();\n        setUpdateData({\n          id: \"\",\n          title: \"\",\n          price: \"\",\n          rating: \"\",\n          available: true\n        });\n      } else {\n        alert(\"Failed to update book: \" + result.message);\n      }\n    } catch (err) {\n      console.error(err);\n      alert(\"Error updating book\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDEE0\\uFE0F Admin Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83D\\uDCDA Add New Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"ID\",\n      value: newBook.id,\n      onChange: e => setNewBook({\n        ...newBook,\n        id: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: newBook.title,\n      onChange: e => setNewBook({\n        ...newBook,\n        title: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Author\",\n      value: newBook.author,\n      onChange: e => setNewBook({\n        ...newBook,\n        author: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Genre\",\n      value: newBook.genre,\n      onChange: e => setNewBook({\n        ...newBook,\n        genre: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Price\",\n      value: newBook.price,\n      onChange: e => setNewBook({\n        ...newBook,\n        price: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      placeholder: \"Publish Date\",\n      value: newBook.publishDate,\n      onChange: e => setNewBook({\n        ...newBook,\n        publishDate: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      step: \"0.1\",\n      min: \"0\",\n      max: \"5\",\n      placeholder: \"Rating (0-5)\",\n      value: newBook.rating,\n      onChange: e => setNewBook({\n        ...newBook,\n        rating: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: newBook.available,\n      onChange: e => setNewBook({\n        ...newBook,\n        available: e.target.value === \"true\"\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"true\",\n        children: \"Available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"false\",\n        children: \"Borrowed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"admin-button\",\n      onClick: handleAdd,\n      children: \"\\u2795 Add Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"admin-button\",\n      onClick: handleDelete,\n      children: \"\\uD83D\\uDDD1\\uFE0F Delete Book by ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u270F\\uFE0F Update Book (Minimal)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Book ID (to update)\",\n      value: updateData.id,\n      onChange: e => setUpdateData({\n        ...updateData,\n        id: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"New Title\",\n      value: updateData.title,\n      onChange: e => setUpdateData({\n        ...updateData,\n        title: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"New Price\",\n      value: updateData.price,\n      onChange: e => setUpdateData({\n        ...updateData,\n        price: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      step: \"0.1\",\n      min: \"0\",\n      max: \"5\",\n      placeholder: \"New Rating\",\n      value: updateData.rating,\n      onChange: e => setUpdateData({\n        ...updateData,\n        rating: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: updateData.available,\n      onChange: e => setUpdateData({\n        ...updateData,\n        available: e.target.value === \"true\"\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"true\",\n        children: \"Available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"false\",\n        children: \"Borrowed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"admin-button\",\n      onClick: handleUpdate,\n      children: \"\\uD83D\\uDD01 Update Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPanel, \"PJOiFcAzHjQd1YKX5SE6Q/76roc=\");\n_c = AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","AdminPanel","onBookAdded","onBookDeleted","_s","newBook","setNewBook","id","title","author","genre","price","publishDate","available","rating","updateData","setUpdateData","handleAdd","alert","response","fetch","method","headers","body","JSON","stringify","parseFloat","ok","addedBook","json","err","console","error","handleDelete","handleUpdate","result","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","step","min","max","onClick","_c","$RefreshReg$"],"sources":["C:/Users/asus/OneDrive/Pictures/mycodeproject/my project/Library  management system/library-book-explorer/frontend/src/components/AdminPanel.js"],"sourcesContent":["// import { useState } from \"react\";\r\n\r\n// export default function AdminPanel({ onBookAdded, onBookDeleted }) {\r\n//   const [newBook, setNewBook] = useState({\r\n//     id: \"\",\r\n//     title: \"\",\r\n//     author: \"\",\r\n//     genre: \"\",\r\n//     price: \"\",\r\n//     publishDate: \"\",\r\n//     available: true,\r\n//   });\r\n\r\n//   const handleAdd = async () => {\r\n//     if (!newBook.id || !newBook.title || !newBook.genre || !newBook.price || !newBook.author || !newBook.publishDate) {\r\n//       alert(\"Please fill all fields\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://127.0.0.1:5000/api/books\", {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify({\r\n//           ...newBook,\r\n//           price: parseFloat(newBook.price),\r\n//           available: newBook.available === \"true\" || newBook.available === true\r\n//         }),\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         const addedBook = await response.json();\r\n//         onBookAdded(addedBook);\r\n//         alert(\"Book added successfully\");\r\n//         setNewBook({\r\n//           id: \"\",\r\n//           title: \"\",\r\n//           author: \"\",\r\n//           genre: \"\",\r\n//           price: \"\",\r\n//           publishDate: \"\",\r\n//           available: true\r\n//         });\r\n//       } else {\r\n//         alert(\"Failed to add book\");\r\n//       }\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//       alert(\"Error adding book\");\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async () => {\r\n//     if (!newBook.id) {\r\n//       alert(\"Enter the ID of the book to delete\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch(`http://127.0.0.1:5000/api/books/${newBook.id}`, {\r\n//         method: \"DELETE\",\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         onBookDeleted(newBook.id);\r\n//         alert(\"Book deleted successfully\");\r\n//         setNewBook({ ...newBook, id: \"\" });\r\n//       } else {\r\n//         alert(\"Failed to delete book\");\r\n//       }\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//       alert(\"Error deleting book\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"admin-panel\">\r\n//       <h2>Admin Panel</h2>\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"ID\"\r\n//         value={newBook.id}\r\n//         onChange={(e) => setNewBook({ ...newBook, id: e.target.value })}\r\n//       />\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Title\"\r\n//         value={newBook.title}\r\n//         onChange={(e) => setNewBook({ ...newBook, title: e.target.value })}\r\n//       />\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Author\"\r\n//         value={newBook.author}\r\n//         onChange={(e) => setNewBook({ ...newBook, author: e.target.value })}\r\n//       />\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Genre\"\r\n//         value={newBook.genre}\r\n//         onChange={(e) => setNewBook({ ...newBook, genre: e.target.value })}\r\n//       />\r\n//       <input\r\n//         type=\"number\"\r\n//         placeholder=\"Price\"\r\n//         value={newBook.price}\r\n//         onChange={(e) => setNewBook({ ...newBook, price: e.target.value })}\r\n//       />\r\n//       <input\r\n//         type=\"date\"\r\n//         placeholder=\"Publish Date\"\r\n//         value={newBook.publishDate}\r\n//         onChange={(e) => setNewBook({ ...newBook, publishDate: e.target.value })}\r\n//       />\r\n//       <select\r\n//         value={newBook.available}\r\n//         onChange={(e) =>\r\n//           setNewBook({\r\n//             ...newBook,\r\n//             available: e.target.value === \"true\" ? true : false,\r\n//           })\r\n//         }\r\n//       >\r\n//         <option value=\"true\">Available</option>\r\n//         <option value=\"false\">Borrowed</option>\r\n//       </select>\r\n//       <div style={{ marginTop: \"8px\" }}>\r\n//         <button className=\"admin-button\" onClick={handleAdd}>\r\n//           Add Book\r\n//         </button>\r\n//         <button className=\"admin-button\" onClick={handleDelete}>\r\n//           Delete Book by ID\r\n//         </button>\r\n\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\nimport { useState } from \"react\";\r\n\r\nexport default function AdminPanel({ onBookAdded, onBookDeleted }) {\r\n  const [newBook, setNewBook] = useState({\r\n    id: \"\",\r\n    title: \"\",\r\n    author: \"\",\r\n    genre: \"\",\r\n    price: \"\",\r\n    publishDate: \"\",\r\n    available: true,\r\n    rating: \"\"\r\n  });\r\n\r\n  const [updateData, setUpdateData] = useState({\r\n    id: \"\",\r\n    title: \"\",\r\n    price: \"\",\r\n    rating: \"\",\r\n    available: true\r\n  });\r\n\r\n  const handleAdd = async () => {\r\n    const { id, title, author, genre, price, publishDate, available, rating } = newBook;\r\n\r\n    if (!id || !title || !genre || !price || !author || !publishDate || !rating) {\r\n      alert(\"Please fill all fields\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:5000/api/books\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          ...newBook,\r\n          price: parseFloat(price),\r\n          rating: parseFloat(rating),\r\n          available: available === \"true\" || available === true,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const addedBook = await response.json();\r\n        onBookAdded(addedBook);\r\n        alert(\"Book added successfully\");\r\n        setNewBook({\r\n          id: \"\",\r\n          title: \"\",\r\n          author: \"\",\r\n          genre: \"\",\r\n          price: \"\",\r\n          publishDate: \"\",\r\n          available: true,\r\n          rating: \"\"\r\n        });\r\n      } else {\r\n        alert(\"Failed to add book\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Error adding book\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (!newBook.id) {\r\n      alert(\"Enter the ID of the book to delete\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`http://127.0.0.1:5000/api/books/${newBook.id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n\r\n      if (response.ok) {\r\n        onBookDeleted(newBook.id);\r\n        alert(\"Book deleted successfully\");\r\n        setNewBook({ ...newBook, id: \"\" });\r\n      } else {\r\n        alert(\"Failed to delete book\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Error deleting book\");\r\n    }\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    const { id, title, price, rating, available } = updateData;\r\n\r\n    if (!id || !title || !price || !rating) {\r\n      alert(\"Please fill all update fields\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`http://127.0.0.1:5000/api/books/${id}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          title,\r\n          price: parseFloat(price),\r\n          rating: parseFloat(rating),\r\n          available: available === \"true\" || available === true\r\n        }),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.ok) {\r\n        alert(result.message || \"Book updated successfully\");\r\n        onBookAdded();\r\n        setUpdateData({\r\n          id: \"\",\r\n          title: \"\",\r\n          price: \"\",\r\n          rating: \"\",\r\n          available: true\r\n        });\r\n      } else {\r\n        alert(\"Failed to update book: \" + result.message);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Error updating book\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-panel\">\r\n      <h2>🛠️ Admin Panel</h2>\r\n\r\n      {/* ADD BOOK SECTION */}\r\n      <h3>📚 Add New Book</h3>\r\n      <input type=\"text\" placeholder=\"ID\" value={newBook.id} onChange={(e) => setNewBook({ ...newBook, id: e.target.value })} />\r\n      <input type=\"text\" placeholder=\"Title\" value={newBook.title} onChange={(e) => setNewBook({ ...newBook, title: e.target.value })} />\r\n      <input type=\"text\" placeholder=\"Author\" value={newBook.author} onChange={(e) => setNewBook({ ...newBook, author: e.target.value })} />\r\n      <input type=\"text\" placeholder=\"Genre\" value={newBook.genre} onChange={(e) => setNewBook({ ...newBook, genre: e.target.value })} />\r\n      <input type=\"number\" placeholder=\"Price\" value={newBook.price} onChange={(e) => setNewBook({ ...newBook, price: e.target.value })} />\r\n      <input type=\"date\" placeholder=\"Publish Date\" value={newBook.publishDate} onChange={(e) => setNewBook({ ...newBook, publishDate: e.target.value })} />\r\n      <input type=\"number\" step=\"0.1\" min=\"0\" max=\"5\" placeholder=\"Rating (0-5)\" value={newBook.rating} onChange={(e) => setNewBook({ ...newBook, rating: e.target.value })} />\r\n      <select value={newBook.available} onChange={(e) => setNewBook({ ...newBook, available: e.target.value === \"true\" })}>\r\n        <option value=\"true\">Available</option>\r\n        <option value=\"false\">Borrowed</option>\r\n      </select>\r\n      <br />\r\n      <button className=\"admin-button\" onClick={handleAdd}>➕ Add Book</button>\r\n      <button className=\"admin-button\" onClick={handleDelete}>🗑️ Delete Book by ID</button>\r\n\r\n      <hr />\r\n\r\n      {/* UPDATE SECTION */}\r\n      <h3>✏️ Update Book (Minimal)</h3>\r\n      <input type=\"text\" placeholder=\"Book ID (to update)\" value={updateData.id} onChange={(e) => setUpdateData({ ...updateData, id: e.target.value })} />\r\n      <input type=\"text\" placeholder=\"New Title\" value={updateData.title} onChange={(e) => setUpdateData({ ...updateData, title: e.target.value })} />\r\n      <input type=\"number\" placeholder=\"New Price\" value={updateData.price} onChange={(e) => setUpdateData({ ...updateData, price: e.target.value })} />\r\n      <input type=\"number\" step=\"0.1\" min=\"0\" max=\"5\" placeholder=\"New Rating\" value={updateData.rating} onChange={(e) => setUpdateData({ ...updateData, rating: e.target.value })} />\r\n      <select value={updateData.available} onChange={(e) => setUpdateData({ ...updateData, available: e.target.value === \"true\" })}>\r\n        <option value=\"true\">Available</option>\r\n        <option value=\"false\">Borrowed</option>\r\n      </select>\r\n      <br />\r\n      <button className=\"admin-button\" onClick={handleUpdate}>🔁 Update Book</button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappingsjC,eAAe,SAASC,UAAUA,CAAC;EAAEC,WAAW;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EACjE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC;IACrCS,EAAE,EAAE,EAAE;IACNC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,EAAE;IACfC,SAAS,EAAE,IAAI;IACfC,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC;IAC3CS,EAAE,EAAE,EAAE;IACNC,KAAK,EAAE,EAAE;IACTG,KAAK,EAAE,EAAE;IACTG,MAAM,EAAE,EAAE;IACVD,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,MAAMI,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAM;MAAEV,EAAE;MAAEC,KAAK;MAAEC,MAAM;MAAEC,KAAK;MAAEC,KAAK;MAAEC,WAAW;MAAEC,SAAS;MAAEC;IAAO,CAAC,GAAGT,OAAO;IAEnF,IAAI,CAACE,EAAE,IAAI,CAACC,KAAK,IAAI,CAACE,KAAK,IAAI,CAACC,KAAK,IAAI,CAACF,MAAM,IAAI,CAACG,WAAW,IAAI,CAACE,MAAM,EAAE;MAC3EI,KAAK,CAAC,wBAAwB,CAAC;MAC/B;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC9DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnB,GAAGpB,OAAO;UACVM,KAAK,EAAEe,UAAU,CAACf,KAAK,CAAC;UACxBG,MAAM,EAAEY,UAAU,CAACZ,MAAM,CAAC;UAC1BD,SAAS,EAAEA,SAAS,KAAK,MAAM,IAAIA,SAAS,KAAK;QACnD,CAAC;MACH,CAAC,CAAC;MAEF,IAAIM,QAAQ,CAACQ,EAAE,EAAE;QACf,MAAMC,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QACvC3B,WAAW,CAAC0B,SAAS,CAAC;QACtBV,KAAK,CAAC,yBAAyB,CAAC;QAChCZ,UAAU,CAAC;UACTC,EAAE,EAAE,EAAE;UACNC,KAAK,EAAE,EAAE;UACTC,MAAM,EAAE,EAAE;UACVC,KAAK,EAAE,EAAE;UACTC,KAAK,EAAE,EAAE;UACTC,WAAW,EAAE,EAAE;UACfC,SAAS,EAAE,IAAI;UACfC,MAAM,EAAE;QACV,CAAC,CAAC;MACJ,CAAC,MAAM;QACLI,KAAK,CAAC,oBAAoB,CAAC;MAC7B;IACF,CAAC,CAAC,OAAOY,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBZ,KAAK,CAAC,mBAAmB,CAAC;IAC5B;EACF,CAAC;EAED,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAAC5B,OAAO,CAACE,EAAE,EAAE;MACfW,KAAK,CAAC,oCAAoC,CAAC;MAC3C;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmCf,OAAO,CAACE,EAAE,EAAE,EAAE;QAC5Ec,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,IAAIF,QAAQ,CAACQ,EAAE,EAAE;QACfxB,aAAa,CAACE,OAAO,CAACE,EAAE,CAAC;QACzBW,KAAK,CAAC,2BAA2B,CAAC;QAClCZ,UAAU,CAAC;UAAE,GAAGD,OAAO;UAAEE,EAAE,EAAE;QAAG,CAAC,CAAC;MACpC,CAAC,MAAM;QACLW,KAAK,CAAC,uBAAuB,CAAC;MAChC;IACF,CAAC,CAAC,OAAOY,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBZ,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,MAAMgB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAM;MAAE3B,EAAE;MAAEC,KAAK;MAAEG,KAAK;MAAEG,MAAM;MAAED;IAAU,CAAC,GAAGE,UAAU;IAE1D,IAAI,CAACR,EAAE,IAAI,CAACC,KAAK,IAAI,CAACG,KAAK,IAAI,CAACG,MAAM,EAAE;MACtCI,KAAK,CAAC,+BAA+B,CAAC;MACtC;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmCb,EAAE,EAAE,EAAE;QACpEc,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBjB,KAAK;UACLG,KAAK,EAAEe,UAAU,CAACf,KAAK,CAAC;UACxBG,MAAM,EAAEY,UAAU,CAACZ,MAAM,CAAC;UAC1BD,SAAS,EAAEA,SAAS,KAAK,MAAM,IAAIA,SAAS,KAAK;QACnD,CAAC;MACH,CAAC,CAAC;MAEF,MAAMsB,MAAM,GAAG,MAAMhB,QAAQ,CAACU,IAAI,CAAC,CAAC;MAEpC,IAAIV,QAAQ,CAACQ,EAAE,EAAE;QACfT,KAAK,CAACiB,MAAM,CAACC,OAAO,IAAI,2BAA2B,CAAC;QACpDlC,WAAW,CAAC,CAAC;QACbc,aAAa,CAAC;UACZT,EAAE,EAAE,EAAE;UACNC,KAAK,EAAE,EAAE;UACTG,KAAK,EAAE,EAAE;UACTG,MAAM,EAAE,EAAE;UACVD,SAAS,EAAE;QACb,CAAC,CAAC;MACJ,CAAC,MAAM;QACLK,KAAK,CAAC,yBAAyB,GAAGiB,MAAM,CAACC,OAAO,CAAC;MACnD;IACF,CAAC,CAAC,OAAON,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBZ,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,oBACElB,OAAA;IAAKqC,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BtC,OAAA;MAAAsC,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGxB1C,OAAA;MAAAsC,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB1C,OAAA;MAAO2C,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,IAAI;MAACC,KAAK,EAAExC,OAAO,CAACE,EAAG;MAACuC,QAAQ,EAAGC,CAAC,IAAKzC,UAAU,CAAC;QAAE,GAAGD,OAAO;QAAEE,EAAE,EAAEwC,CAAC,CAACC,MAAM,CAACH;MAAM,CAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1H1C,OAAA;MAAO2C,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,OAAO;MAACC,KAAK,EAAExC,OAAO,CAACG,KAAM;MAACsC,QAAQ,EAAGC,CAAC,IAAKzC,UAAU,CAAC;QAAE,GAAGD,OAAO;QAAEG,KAAK,EAAEuC,CAAC,CAACC,MAAM,CAACH;MAAM,CAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnI1C,OAAA;MAAO2C,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,QAAQ;MAACC,KAAK,EAAExC,OAAO,CAACI,MAAO;MAACqC,QAAQ,EAAGC,CAAC,IAAKzC,UAAU,CAAC;QAAE,GAAGD,OAAO;QAAEI,MAAM,EAAEsC,CAAC,CAACC,MAAM,CAACH;MAAM,CAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtI1C,OAAA;MAAO2C,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,OAAO;MAACC,KAAK,EAAExC,OAAO,CAACK,KAAM;MAACoC,QAAQ,EAAGC,CAAC,IAAKzC,UAAU,CAAC;QAAE,GAAGD,OAAO;QAAEK,KAAK,EAAEqC,CAAC,CAACC,MAAM,CAACH;MAAM,CAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnI1C,OAAA;MAAO2C,IAAI,EAAC,QAAQ;MAACC,WAAW,EAAC,OAAO;MAACC,KAAK,EAAExC,OAAO,CAACM,KAAM;MAACmC,QAAQ,EAAGC,CAAC,IAAKzC,UAAU,CAAC;QAAE,GAAGD,OAAO;QAAEM,KAAK,EAAEoC,CAAC,CAACC,MAAM,CAACH;MAAM,CAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrI1C,OAAA;MAAO2C,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,cAAc;MAACC,KAAK,EAAExC,OAAO,CAACO,WAAY;MAACkC,QAAQ,EAAGC,CAAC,IAAKzC,UAAU,CAAC;QAAE,GAAGD,OAAO;QAAEO,WAAW,EAAEmC,CAAC,CAACC,MAAM,CAACH;MAAM,CAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtJ1C,OAAA;MAAO2C,IAAI,EAAC,QAAQ;MAACM,IAAI,EAAC,KAAK;MAACC,GAAG,EAAC,GAAG;MAACC,GAAG,EAAC,GAAG;MAACP,WAAW,EAAC,cAAc;MAACC,KAAK,EAAExC,OAAO,CAACS,MAAO;MAACgC,QAAQ,EAAGC,CAAC,IAAKzC,UAAU,CAAC;QAAE,GAAGD,OAAO;QAAES,MAAM,EAAEiC,CAAC,CAACC,MAAM,CAACH;MAAM,CAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzK1C,OAAA;MAAQ6C,KAAK,EAAExC,OAAO,CAACQ,SAAU;MAACiC,QAAQ,EAAGC,CAAC,IAAKzC,UAAU,CAAC;QAAE,GAAGD,OAAO;QAAEQ,SAAS,EAAEkC,CAAC,CAACC,MAAM,CAACH,KAAK,KAAK;MAAO,CAAC,CAAE;MAAAP,QAAA,gBAClHtC,OAAA;QAAQ6C,KAAK,EAAC,MAAM;QAAAP,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACvC1C,OAAA;QAAQ6C,KAAK,EAAC,OAAO;QAAAP,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACT1C,OAAA;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN1C,OAAA;MAAQqC,SAAS,EAAC,cAAc;MAACe,OAAO,EAAEnC,SAAU;MAAAqB,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACxE1C,OAAA;MAAQqC,SAAS,EAAC,cAAc;MAACe,OAAO,EAAEnB,YAAa;MAAAK,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEtF1C,OAAA;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAGN1C,OAAA;MAAAsC,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjC1C,OAAA;MAAO2C,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,qBAAqB;MAACC,KAAK,EAAE9B,UAAU,CAACR,EAAG;MAACuC,QAAQ,EAAGC,CAAC,IAAK/B,aAAa,CAAC;QAAE,GAAGD,UAAU;QAAER,EAAE,EAAEwC,CAAC,CAACC,MAAM,CAACH;MAAM,CAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpJ1C,OAAA;MAAO2C,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,WAAW;MAACC,KAAK,EAAE9B,UAAU,CAACP,KAAM;MAACsC,QAAQ,EAAGC,CAAC,IAAK/B,aAAa,CAAC;QAAE,GAAGD,UAAU;QAAEP,KAAK,EAAEuC,CAAC,CAACC,MAAM,CAACH;MAAM,CAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChJ1C,OAAA;MAAO2C,IAAI,EAAC,QAAQ;MAACC,WAAW,EAAC,WAAW;MAACC,KAAK,EAAE9B,UAAU,CAACJ,KAAM;MAACmC,QAAQ,EAAGC,CAAC,IAAK/B,aAAa,CAAC;QAAE,GAAGD,UAAU;QAAEJ,KAAK,EAAEoC,CAAC,CAACC,MAAM,CAACH;MAAM,CAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClJ1C,OAAA;MAAO2C,IAAI,EAAC,QAAQ;MAACM,IAAI,EAAC,KAAK;MAACC,GAAG,EAAC,GAAG;MAACC,GAAG,EAAC,GAAG;MAACP,WAAW,EAAC,YAAY;MAACC,KAAK,EAAE9B,UAAU,CAACD,MAAO;MAACgC,QAAQ,EAAGC,CAAC,IAAK/B,aAAa,CAAC;QAAE,GAAGD,UAAU;QAAED,MAAM,EAAEiC,CAAC,CAACC,MAAM,CAACH;MAAM,CAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChL1C,OAAA;MAAQ6C,KAAK,EAAE9B,UAAU,CAACF,SAAU;MAACiC,QAAQ,EAAGC,CAAC,IAAK/B,aAAa,CAAC;QAAE,GAAGD,UAAU;QAAEF,SAAS,EAAEkC,CAAC,CAACC,MAAM,CAACH,KAAK,KAAK;MAAO,CAAC,CAAE;MAAAP,QAAA,gBAC3HtC,OAAA;QAAQ6C,KAAK,EAAC,MAAM;QAAAP,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACvC1C,OAAA;QAAQ6C,KAAK,EAAC,OAAO;QAAAP,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACT1C,OAAA;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN1C,OAAA;MAAQqC,SAAS,EAAC,cAAc;MAACe,OAAO,EAAElB,YAAa;MAAAI,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5E,CAAC;AAEV;AAACtC,EAAA,CArKuBH,UAAU;AAAAoD,EAAA,GAAVpD,UAAU;AAAA,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}