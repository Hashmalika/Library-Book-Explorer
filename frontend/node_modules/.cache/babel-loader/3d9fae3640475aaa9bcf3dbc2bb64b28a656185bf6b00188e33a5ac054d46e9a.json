{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\OneDrive\\\\Pictures\\\\mycodeproject\\\\my project\\\\Library  management system\\\\library-book-explorer\\\\frontend\\\\src\\\\components\\\\BookList.js\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from \"react\";\n// import { X } from \"lucide-react\";\n\n// export default function BookList({ onBorrow, onSelectBook }) {\n//   const [books, setBooks] = useState([]);\n//   const [selectedBooks, setSelectedBooks] = useState([]);\n\n//   // Pending filters (used before \"Apply\")\n//   const [pendingFilters, setPendingFilters] = useState({\n//     search: \"\",\n//     genre: \"\",\n//     availability: \"\",\n//     priceRange: [0, 1000],\n//     sortBy: \"\"\n//   });\n\n//   // Actual filters applied after \"Apply Filters\"\n//   const [filters, setFilters] = useState(pendingFilters);\n\n//   useEffect(() => {\n//     fetch(\"http://127.0.0.1:5000/api/books\")\n//       .then((res) => res.json())\n//       .then((data) => {\n//         console.log(data);\n//         setBooks(data);\n//       });\n//   }, []);\n\n//   const handleSelectBook = (book) => {\n//     if (selectedBooks.find((b) => b.id === book.id)) {\n//       setSelectedBooks(selectedBooks.filter((b) => b.id !== book.id));\n//     } else {\n//       setSelectedBooks([...selectedBooks, book]);\n//     }\n//   };\n\n//   const removeFilter = (type) => {\n//     const updated = { ...filters };\n//     if (type === \"genre\") updated.genre = \"\";\n//     if (type === \"availability\") updated.availability = \"\";\n//     if (type === \"price\") updated.priceRange = [0, 1000];\n//     setPendingFilters(updated);\n//     setFilters(updated);\n//   };\n\n//   const applyFilters = () => {\n//     setFilters({ ...pendingFilters });\n//   };\n\n//   const filteredBooks = books\n//     .filter((book) =>\n//       book.title.toLowerCase().includes(filters.search.toLowerCase())\n//     )\n//     .filter((book) => (filters.genre ? book.genre === filters.genre : true))\n//     .filter((book) =>\n//       filters.availability === \"true\"\n//         ? book.available === true\n//         : filters.availability === \"false\"\n//         ? book.available === false\n//         : true\n//     )\n//     .filter(\n//       (book) =>\n//         book.price >= filters.priceRange[0] &&\n//         book.price <= filters.priceRange[1]\n//     );\n\n//   const sortedBooks = [...filteredBooks].sort((a, b) => {\n//     if (filters.sortBy === \"title\") return a.title.localeCompare(b.title);\n//     if (filters.sortBy === \"priceLowHigh\") return a.price - b.price;\n//     if (filters.sortBy === \"priceHighLow\") return b.price - a.price;\n//     if (filters.sortBy === \"availability\") return b.available - a.available;\n//     return 0;\n//   });\n\n//   const totalSelected = selectedBooks.length;\n//   const totalPrice = selectedBooks.reduce((sum, b) => sum + b.price, 0);\n\n//   return (\n//     <div>\n//       <div className=\"filter-section\">\n//         <input\n//           className=\"filter-input\"\n//           placeholder=\"Search by title...\"\n//           value={pendingFilters.search}\n//           onChange={(e) =>\n//             setPendingFilters({ ...pendingFilters, search: e.target.value })\n//           }\n//         />\n//         <select\n//           className=\"filter-input\"\n//           value={pendingFilters.genre}\n//           onChange={(e) =>\n//             setPendingFilters({ ...pendingFilters, genre: e.target.value })\n//           }\n//         >\n//           <option value=\"\">All Genres</option>\n//           <option value=\"Fiction\">Fiction</option>\n//           <option value=\"Science\">Science</option>\n//           <option value=\"Finance\">Finance</option>\n//           <option value=\"Self-help\">Self-help</option>\n//           <option value=\"Philosophy\">Philosophy</option>\n//           <option value=\"Biography\">Biography</option>\n//           <option value=\"Fantasy\">Fantasy</option>\n//           <option value=\"Romance\">Romance</option>\n//           <option value=\"Business\">Business</option>\n//           <option value=\"History\">History</option>\n//         </select>\n//         <select\n//           className=\"filter-input\"\n//           value={pendingFilters.availability}\n//           onChange={(e) =>\n//             setPendingFilters({\n//               ...pendingFilters,\n//               availability: e.target.value\n//             })\n//           }\n//         >\n//           <option value=\"\">All</option>\n//           <option value=\"true\">Available</option>\n//           <option value=\"false\">Borrowed</option>\n//         </select>\n//         <select\n//           className=\"filter-input\"\n//           value={pendingFilters.sortBy}\n//           onChange={(e) =>\n//             setPendingFilters({ ...pendingFilters, sortBy: e.target.value })\n//           }\n//         >\n//           <option value=\"\">Sort By</option>\n//           <option value=\"title\">Title (A-Z)</option>\n//           <option value=\"priceLowHigh\">Price: Low to High</option>\n//           <option value=\"priceHighLow\">Price: High to Low</option>\n//           <option value=\"availability\">Availability</option>\n//         </select>\n\n//         {/* Price Slider */}\n//         <div className=\"price-slider\">\n//           <span>₹{pendingFilters.priceRange[0]}</span>\n//           <input\n//             type=\"range\"\n//             min=\"0\"\n//             max=\"1000\"\n//             step=\"50\"\n//             value={pendingFilters.priceRange[0]}\n//             onChange={(e) =>\n//               setPendingFilters({\n//                 ...pendingFilters,\n//                 priceRange: [parseInt(e.target.value), pendingFilters.priceRange[1]]\n//               })\n//             }\n//           />\n//           <input\n//             type=\"range\"\n//             min=\"0\"\n//             max=\"1000\"\n//             step=\"50\"\n//             value={pendingFilters.priceRange[1]}\n//             onChange={(e) =>\n//               setPendingFilters({\n//                 ...pendingFilters,\n//                 priceRange: [pendingFilters.priceRange[0], parseInt(e.target.value)]\n//               })\n//             }\n//           />\n//           <span>₹{pendingFilters.priceRange[1]}</span>\n//         </div>\n\n//         <button className=\"apply-button\" onClick={applyFilters}>\n//           ✅ Apply Filters\n//         </button>\n//       </div>\n\n//       {/* Active Filters */}\n//       <div className=\"active-filters\">\n//         {filters.genre && (\n//           <span className=\"filter-tag\">\n//             Genre: {filters.genre}{\" \"}\n//             <X size={14} onClick={() => removeFilter(\"genre\")} />\n//           </span>\n//         )}\n//         {filters.availability && (\n//           <span className=\"filter-tag\">\n//             {filters.availability === \"true\" ? \"Available\" : \"Borrowed\"}{\" \"}\n//             <X size={14} onClick={() => removeFilter(\"availability\")} />\n//           </span>\n//         )}\n//         {(filters.priceRange[0] !== 0 || filters.priceRange[1] !== 1000) && (\n//           <span className=\"filter-tag\">\n//             Price: ₹{filters.priceRange[0]}–₹{filters.priceRange[1]}{\" \"}\n//             <X size={14} onClick={() => removeFilter(\"price\")} />\n//           </span>\n//         )}\n//       </div>\n\n//       {/* Cart Info */}\n//       {totalSelected > 0 && (\n//         <div className=\"borrow-info\">\n//           ✅ {totalSelected} book(s) selected to borrow | Total Price: ₹\n//           {totalPrice.toFixed(2)}\n//         </div>\n//       )}\n\n//       {/* Book Cards */}\n//       <ul className=\"book-list\">\n//         {sortedBooks.map((book) => (\n//           <li\n//             key={book.id}\n//             className={`book-card ${\n//               selectedBooks.find((b) => b.id === book.id) ? \"selected\" : \"\"\n//             }`}\n//           >\n//             <h3>{book.title}</h3>\n//             <p>Genre: {book.genre}</p>\n//             <p>Status: {book.available ? \"Available\" : \"Borrowed\"}</p>\n//             <p>Price: ₹{parseFloat(book.price).toFixed(2)}</p>\n//             <div className=\"button-row\">\n//               <button className=\"book-button\" onClick={() => onSelectBook(book)}>\n//                 Details\n//               </button>\n//               <button className=\"book-button\" onClick={() => handleSelectBook(book)}>\n//                 {selectedBooks.find((b) => b.id === book.id) ? \"Remove\" : \"Select\"}\n//               </button>\n//               {book.available && (\n//                 <button\n//                   className=\"book-button borrow\"\n//                   onClick={() => onBorrow(book)}\n//                 >\n//                   Borrow\n//                 </button>\n//               )}\n//             </div>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// import { useEffect, useState } from \"react\";\n// import { X } from \"lucide-react\";\n// import BookDetailModal from \"./BookDetailModal\"; // Make sure this is correctly imported\n\n// export default function BookList({ onBorrow }) {\n//   const [books, setBooks] = useState([]);\n//   const [selectedBooks, setSelectedBooks] = useState([]);\n//   const [selectedBook, setSelectedBook] = useState(null); // For modal\n\n//   // Filters before Apply\n//   const [pendingFilters, setPendingFilters] = useState({\n//     search: \"\",\n//     genre: \"\",\n//     availability: \"\",\n//     priceRange: [0, 1000],\n//     sortBy: \"\"\n//   });\n\n//   const [filters, setFilters] = useState(pendingFilters);\n\n//   // useEffect(() => {\n//   //   fetch(\"http://127.0.0.1:5000/api/books\")\n//   //     .then((res) => res.json())\n//   //     .then((data) => setBooks(data))\n//   //     .catch((err) => console.error(\"Failed to fetch books:\", err));\n//   // }, []);\n\n//   useEffect(() => {\n//   fetch(\"http://127.0.0.1:5000/api/books\")\n//     .then((res) => res.json())\n//     .then((data) => {\n//       const normalized = data.map(book => ({\n//         ...book,\n//         available: book.available === true || book.available === 1 || book.available === \"1\"\n//       }));\n//       setBooks(normalized);\n//     })\n//     .catch((err) => console.error(\"Failed to fetch books:\", err));\n// }, []);\n\n//   const handleSelectBook = (book) => {\n//     if (selectedBooks.find((b) => b.id === book.id)) {\n//       setSelectedBooks(selectedBooks.filter((b) => b.id !== book.id));\n//     } else {\n//       setSelectedBooks([...selectedBooks, book]);\n//     }\n//   };\n\n//   const removeFilter = (type) => {\n//     const updated = { ...filters };\n//     if (type === \"genre\") updated.genre = \"\";\n//     if (type === \"availability\") updated.availability = \"\";\n//     if (type === \"price\") updated.priceRange = [0, 1000];\n//     setPendingFilters(updated);\n//     setFilters(updated);\n//   };\n\n//   const applyFilters = () => {\n//     setFilters({ ...pendingFilters });\n//   };\n\n//   const filteredBooks = books\n//     .filter((book) =>\n//       book.title.toLowerCase().includes(filters.search.toLowerCase())\n//     )\n//     .filter((book) => (filters.genre ? book.genre === filters.genre : true))\n//     .filter((book) =>\n//       filters.availability === \"true\"\n//         ? book.available === true\n//         : filters.availability === \"false\"\n//         ? book.available === false\n//         : true\n//     )\n//     .filter(\n//       (book) =>\n//         parseFloat(book.price) >= filters.priceRange[0] &&\n//         parseFloat(book.price) <= filters.priceRange[1]\n//     );\n\n//   const sortedBooks = [...filteredBooks].sort((a, b) => {\n//     if (filters.sortBy === \"title\") return a.title.localeCompare(b.title);\n//     if (filters.sortBy === \"priceLowHigh\") return a.price - b.price;\n//     if (filters.sortBy === \"priceHighLow\") return b.price - a.price;\n//     if (filters.sortBy === \"availability\") return b.available - a.available;\n//     return 0;\n//   });\n\n//   const totalSelected = selectedBooks.length;\n//   const totalPrice = selectedBooks.reduce((sum, b) => sum + parseFloat(b.price), 0);\n\n//   return (\n//     <div>\n//       <div className=\"filter-section\">\n//         <input\n//           className=\"filter-input\"\n//           placeholder=\"Search by title...\"\n//           value={pendingFilters.search}\n//           onChange={(e) =>\n//             setPendingFilters({ ...pendingFilters, search: e.target.value })\n//           }\n//         />\n//         <select\n//           className=\"filter-input\"\n//           value={pendingFilters.genre}\n//           onChange={(e) =>\n//             setPendingFilters({ ...pendingFilters, genre: e.target.value })\n//           }\n//         >\n//           <option value=\"\">All Genres</option>\n//           <option value=\"Fiction\">Fiction</option>\n//           <option value=\"Science\">Science</option>\n//           <option value=\"Finance\">Finance</option>\n//           <option value=\"Self-help\">Self-help</option>\n//           <option value=\"Philosophy\">Philosophy</option>\n//           <option value=\"Biography\">Biography</option>\n//           <option value=\"Fantasy\">Fantasy</option>\n//           <option value=\"Romance\">Romance</option>\n//           <option value=\"Business\">Business</option>\n//           <option value=\"History\">History</option>\n//         </select>\n//         <select\n//           className=\"filter-input\"\n//           value={pendingFilters.availability}\n//           onChange={(e) =>\n//             setPendingFilters({\n//               ...pendingFilters,\n//               availability: e.target.value\n//             })\n//           }\n//         >\n//           <option value=\"\">All</option>\n//           <option value=\"true\">Available</option>\n//           <option value=\"false\">Borrowed</option>\n//         </select>\n//         <select\n//           className=\"filter-input\"\n//           value={pendingFilters.sortBy}\n//           onChange={(e) =>\n//             setPendingFilters({ ...pendingFilters, sortBy: e.target.value })\n//           }\n//         >\n//           <option value=\"\">Sort By</option>\n//           <option value=\"title\">Title (A-Z)</option>\n//           <option value=\"priceLowHigh\">Price: Low to High</option>\n//           <option value=\"priceHighLow\">Price: High to Low</option>\n//           <option value=\"availability\">Availability</option>\n//         </select>\n\n//         {/* Price Slider */}\n//         <div className=\"price-slider\">\n//           <span>₹{pendingFilters.priceRange[0]}</span>\n//           <input\n//             type=\"range\"\n//             min=\"0\"\n//             max=\"1000\"\n//             step=\"50\"\n//             value={pendingFilters.priceRange[0]}\n//             onChange={(e) =>\n//               setPendingFilters({\n//                 ...pendingFilters,\n//                 priceRange: [parseInt(e.target.value), pendingFilters.priceRange[1]]\n//               })\n//             }\n//           />\n//           <input\n//             type=\"range\"\n//             min=\"0\"\n//             max=\"1000\"\n//             step=\"50\"\n//             value={pendingFilters.priceRange[1]}\n//             onChange={(e) =>\n//               setPendingFilters({\n//                 ...pendingFilters,\n//                 priceRange: [pendingFilters.priceRange[0], parseInt(e.target.value)]\n//               })\n//             }\n//           />\n//           <span>₹{pendingFilters.priceRange[1]}</span>\n//         </div>\n\n//         <button className=\"apply-button\" onClick={applyFilters}>\n//           ✅ Apply Filters\n//         </button>\n//       </div>\n\n//       {/* Active Filters */}\n//       <div className=\"active-filters\">\n//         {filters.genre && (\n//           <span className=\"filter-tag\">\n//             Genre: {filters.genre} <X size={14} onClick={() => removeFilter(\"genre\")} />\n//           </span>\n//         )}\n//         {filters.availability && (\n//           <span className=\"filter-tag\">\n//             {filters.availability === \"true\" ? \"Available\" : \"Borrowed\"}{\" \"}\n//             <X size={14} onClick={() => removeFilter(\"availability\")} />\n//           </span>\n//         )}\n//         {(filters.priceRange[0] !== 0 || filters.priceRange[1] !== 1000) && (\n//           <span className=\"filter-tag\">\n//             Price: ₹{filters.priceRange[0]}–₹{filters.priceRange[1]}{\" \"}\n//             <X size={14} onClick={() => removeFilter(\"price\")} />\n//           </span>\n//         )}\n//       </div>\n\n//       {/* Cart Info */}\n//       {totalSelected > 0 && (\n//         <div className=\"borrow-info\">\n//           ✅ {totalSelected} book(s) selected | Total Price: ₹\n//           {totalPrice.toFixed(2)}\n//         </div>\n//       )}\n\n//       {/* Book Cards */}\n//       <ul className=\"book-list\">\n//         {sortedBooks.map((book) => (\n//           <li\n//             key={book.id}\n//             className={`book-card ${\n//               selectedBooks.find((b) => b.id === book.id) ? \"selected\" : \"\"\n//             }`}\n//           >\n//             <h3 onClick={() => setSelectedBook(book)} style={{ cursor: \"pointer\" }}>\n//               {book.title}\n//             </h3>\n//             <p>Genre: {book.genre}</p>\n//             <p>Status: {book.available ? \"Available\" : \"Borrowed\"}</p>\n//             <p>Price: ₹{parseFloat(book.price).toFixed(2)}</p>\n//             <div className=\"button-row\">\n//               <button className=\"book-button\" onClick={() => setSelectedBook(book)}>\n//                 Details\n//               </button>\n//               <button className=\"book-button\" onClick={() => handleSelectBook(book)}>\n//                 {selectedBooks.find((b) => b.id === book.id) ? \"Remove\" : \"Select\"}\n//               </button>\n//               {book.available && (\n//                 <button\n//                   className=\"book-button borrow\"\n//                   onClick={() => onBorrow(book)}\n//                 >\n//                   Borrow\n//                 </button>\n//               )}\n//             </div>\n//           </li>\n//         ))}\n//       </ul>\n\n//       {/* Book Detail Modal */}\n//       <BookDetailModal book={selectedBook} onClose={() => setSelectedBook(null)} />\n//     </div>\n//   );\n// }\n\nimport { useEffect, useState } from \"react\";\nimport { X, CheckCircle, XCircle } from \"lucide-react\";\nimport BookDetailModal from \"./BookDetailModal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BookList({\n  onBorrow\n}) {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [selectedBooks, setSelectedBooks] = useState([]);\n  const [selectedBook, setSelectedBook] = useState(null);\n  const [pendingFilters, setPendingFilters] = useState({\n    search: \"\",\n    genre: \"\",\n    availability: \"\",\n    priceRange: [0, 1000],\n    sortBy: \"\"\n  });\n  const [filters, setFilters] = useState(pendingFilters);\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/api/books\").then(res => res.json()).then(data => {\n      const normalized = data.map(book => ({\n        ...book,\n        available: book.available === true || book.available === 1 || book.available === \"1\"\n      }));\n      setBooks(normalized);\n    }).catch(err => console.error(\"Failed to fetch books:\", err));\n  }, []);\n  const handleSelectBook = book => {\n    if (selectedBooks.find(b => b.id === book.id)) {\n      setSelectedBooks(selectedBooks.filter(b => b.id !== book.id));\n    } else {\n      setSelectedBooks([...selectedBooks, book]);\n    }\n  };\n  const removeFilter = type => {\n    const updated = {\n      ...filters\n    };\n    if (type === \"genre\") updated.genre = \"\";\n    if (type === \"availability\") updated.availability = \"\";\n    if (type === \"price\") updated.priceRange = [0, 1000];\n    setPendingFilters(updated);\n    setFilters(updated);\n  };\n  const applyFilters = () => {\n    setFilters({\n      ...pendingFilters\n    });\n  };\n  const filteredBooks = books.filter(book => book.title.toLowerCase().includes(filters.search.toLowerCase())).filter(book => filters.genre ? book.genre === filters.genre : true).filter(book => filters.availability === \"true\" ? book.available === true : filters.availability === \"false\" ? book.available === false : true).filter(book => parseFloat(book.price) >= filters.priceRange[0] && parseFloat(book.price) <= filters.priceRange[1]);\n  const sortedBooks = [...filteredBooks].sort((a, b) => {\n    if (filters.sortBy === \"title\") return a.title.localeCompare(b.title);\n    if (filters.sortBy === \"priceLowHigh\") return a.price - b.price;\n    if (filters.sortBy === \"priceHighLow\") return b.price - a.price;\n    if (filters.sortBy === \"availability\") return b.available - a.available;\n    return 0;\n  });\n  const totalSelected = selectedBooks.length;\n  const totalPrice = selectedBooks.reduce((sum, b) => sum + parseFloat(b.price), 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"filter-input\",\n        placeholder: \"Search by title...\",\n        value: pendingFilters.search,\n        onChange: e => setPendingFilters({\n          ...pendingFilters,\n          search: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"filter-input\",\n        value: pendingFilters.genre,\n        onChange: e => setPendingFilters({\n          ...pendingFilters,\n          genre: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Genres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Fiction\",\n          children: \"Fiction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Science\",\n          children: \"Science\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Finance\",\n          children: \"Finance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Self-help\",\n          children: \"Self-help\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Philosophy\",\n          children: \"Philosophy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Biography\",\n          children: \"Biography\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Fantasy\",\n          children: \"Fantasy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Romance\",\n          children: \"Romance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Business\",\n          children: \"Business\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"History\",\n          children: \"History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"filter-input\",\n        value: pendingFilters.availability,\n        onChange: e => setPendingFilters({\n          ...pendingFilters,\n          availability: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"true\",\n          children: \"Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"false\",\n          children: \"Borrowed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"filter-input\",\n        value: pendingFilters.sortBy,\n        onChange: e => setPendingFilters({\n          ...pendingFilters,\n          sortBy: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Sort By\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"title\",\n          children: \"Title (A-Z)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"priceLowHigh\",\n          children: \"Price: Low to High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"priceHighLow\",\n          children: \"Price: High to Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"availability\",\n          children: \"Availability\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"price-slider\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u20B9\", pendingFilters.priceRange[0]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"1000\",\n          step: \"50\",\n          value: pendingFilters.priceRange[0],\n          onChange: e => setPendingFilters({\n            ...pendingFilters,\n            priceRange: [parseInt(e.target.value), pendingFilters.priceRange[1]]\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"1000\",\n          step: \"50\",\n          value: pendingFilters.priceRange[1],\n          onChange: e => setPendingFilters({\n            ...pendingFilters,\n            priceRange: [pendingFilters.priceRange[0], parseInt(e.target.value)]\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u20B9\", pendingFilters.priceRange[1]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: \"8px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"book-button\",\n            onClick: () => setSelectedBook(book),\n            children: \"Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              padding: \"4px 8px\",\n              borderRadius: \"12px\",\n              fontSize: \"0.75rem\",\n              fontWeight: \"bold\",\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: \"4px\",\n              backgroundColor: book.available ? \"#d4f5d1\" : \"#fcdcdc\",\n              color: book.available ? \"#1f7a1f\" : \"#b30000\"\n            },\n            children: book.available ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 11\n              }, this), \" Available\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(XCircle, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 11\n              }, this), \" Borrowed\"]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"book-button\",\n          onClick: () => handleSelectBook(book),\n          children: selectedBooks.find(b => b.id === book.id) ? \"Remove\" : \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 3\n        }, this), book.available && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"book-button borrow\",\n          onClick: () => onBorrow(book),\n          children: \"Borrow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"active-filters\",\n      children: [filters.genre && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"filter-tag\",\n        children: [\"Genre: \", filters.genre, \" \", /*#__PURE__*/_jsxDEV(X, {\n          size: 14,\n          onClick: () => removeFilter(\"genre\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 11\n      }, this), filters.availability && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"filter-tag\",\n        children: [filters.availability === \"true\" ? \"Available\" : \"Borrowed\", \" \", /*#__PURE__*/_jsxDEV(X, {\n          size: 14,\n          onClick: () => removeFilter(\"availability\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 74\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 11\n      }, this), (filters.priceRange[0] !== 0 || filters.priceRange[1] !== 1000) && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"filter-tag\",\n        children: [\"Price: \\u20B9\", filters.priceRange[0], \"\\u2013\\u20B9\", filters.priceRange[1], \" \", /*#__PURE__*/_jsxDEV(X, {\n          size: 14,\n          onClick: () => removeFilter(\"price\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 70\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 7\n    }, this), totalSelected > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"borrow-info\",\n      children: [\"\\u2705 \", totalSelected, \" book(s) selected | Total Price: \\u20B9\", totalPrice.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"book-list\",\n      children: sortedBooks.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `book-card ${selectedBooks.find(b => b.id === book.id) ? \"selected\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          onClick: () => setSelectedBook(book),\n          style: {\n            cursor: \"pointer\"\n          },\n          children: book.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Genre: \", book.genre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", book.available ? /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"green\",\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: \"6px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 17\n            }, this), \" Available\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: \"6px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(XCircle, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 756,\n              columnNumber: 17\n            }, this), \" Borrowed\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 755,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: \\u20B9\", parseFloat(book.price).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"book-button\",\n            onClick: () => setSelectedBook(book),\n            children: \"Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"book-button\",\n            onClick: () => handleSelectBook(book),\n            children: selectedBooks.find(b => b.id === book.id) ? \"Remove\" : \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 15\n          }, this), book.available && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"book-button borrow\",\n            onClick: () => onBorrow(book),\n            children: \"Borrow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 13\n        }, this)]\n      }, book.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 740,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BookDetailModal, {\n      book: selectedBook,\n      onClose: () => setSelectedBook(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 780,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 580,\n    columnNumber: 5\n  }, this);\n}\n_s(BookList, \"biMIWuWcrBVJhIcIAg+VcWWF/zk=\");\n_c = BookList;\nvar _c;\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["useEffect","useState","X","CheckCircle","XCircle","BookDetailModal","jsxDEV","_jsxDEV","Fragment","_Fragment","BookList","onBorrow","_s","books","setBooks","selectedBooks","setSelectedBooks","selectedBook","setSelectedBook","pendingFilters","setPendingFilters","search","genre","availability","priceRange","sortBy","filters","setFilters","fetch","then","res","json","data","normalized","map","book","available","catch","err","console","error","handleSelectBook","find","b","id","filter","removeFilter","type","updated","applyFilters","filteredBooks","title","toLowerCase","includes","parseFloat","price","sortedBooks","sort","a","localeCompare","totalSelected","length","totalPrice","reduce","sum","children","className","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","min","max","step","parseInt","style","display","alignItems","gap","onClick","padding","borderRadius","fontSize","fontWeight","backgroundColor","color","size","toFixed","cursor","onClose","_c","$RefreshReg$"],"sources":["C:/Users/asus/OneDrive/Pictures/mycodeproject/my project/Library  management system/library-book-explorer/frontend/src/components/BookList.js"],"sourcesContent":["// import { useEffect, useState } from \"react\";\r\n// import { X } from \"lucide-react\";\r\n\r\n// export default function BookList({ onBorrow, onSelectBook }) {\r\n//   const [books, setBooks] = useState([]);\r\n//   const [selectedBooks, setSelectedBooks] = useState([]);\r\n\r\n//   // Pending filters (used before \"Apply\")\r\n//   const [pendingFilters, setPendingFilters] = useState({\r\n//     search: \"\",\r\n//     genre: \"\",\r\n//     availability: \"\",\r\n//     priceRange: [0, 1000],\r\n//     sortBy: \"\"\r\n//   });\r\n\r\n//   // Actual filters applied after \"Apply Filters\"\r\n//   const [filters, setFilters] = useState(pendingFilters);\r\n\r\n//   useEffect(() => {\r\n//     fetch(\"http://127.0.0.1:5000/api/books\")\r\n//       .then((res) => res.json())\r\n//       .then((data) => {\r\n//         console.log(data);\r\n//         setBooks(data);\r\n//       });\r\n//   }, []);\r\n\r\n//   const handleSelectBook = (book) => {\r\n//     if (selectedBooks.find((b) => b.id === book.id)) {\r\n//       setSelectedBooks(selectedBooks.filter((b) => b.id !== book.id));\r\n//     } else {\r\n//       setSelectedBooks([...selectedBooks, book]);\r\n//     }\r\n//   };\r\n\r\n//   const removeFilter = (type) => {\r\n//     const updated = { ...filters };\r\n//     if (type === \"genre\") updated.genre = \"\";\r\n//     if (type === \"availability\") updated.availability = \"\";\r\n//     if (type === \"price\") updated.priceRange = [0, 1000];\r\n//     setPendingFilters(updated);\r\n//     setFilters(updated);\r\n//   };\r\n\r\n//   const applyFilters = () => {\r\n//     setFilters({ ...pendingFilters });\r\n//   };\r\n\r\n//   const filteredBooks = books\r\n//     .filter((book) =>\r\n//       book.title.toLowerCase().includes(filters.search.toLowerCase())\r\n//     )\r\n//     .filter((book) => (filters.genre ? book.genre === filters.genre : true))\r\n//     .filter((book) =>\r\n//       filters.availability === \"true\"\r\n//         ? book.available === true\r\n//         : filters.availability === \"false\"\r\n//         ? book.available === false\r\n//         : true\r\n//     )\r\n//     .filter(\r\n//       (book) =>\r\n//         book.price >= filters.priceRange[0] &&\r\n//         book.price <= filters.priceRange[1]\r\n//     );\r\n\r\n//   const sortedBooks = [...filteredBooks].sort((a, b) => {\r\n//     if (filters.sortBy === \"title\") return a.title.localeCompare(b.title);\r\n//     if (filters.sortBy === \"priceLowHigh\") return a.price - b.price;\r\n//     if (filters.sortBy === \"priceHighLow\") return b.price - a.price;\r\n//     if (filters.sortBy === \"availability\") return b.available - a.available;\r\n//     return 0;\r\n//   });\r\n\r\n//   const totalSelected = selectedBooks.length;\r\n//   const totalPrice = selectedBooks.reduce((sum, b) => sum + b.price, 0);\r\n\r\n//   return (\r\n//     <div>\r\n//       <div className=\"filter-section\">\r\n//         <input\r\n//           className=\"filter-input\"\r\n//           placeholder=\"Search by title...\"\r\n//           value={pendingFilters.search}\r\n//           onChange={(e) =>\r\n//             setPendingFilters({ ...pendingFilters, search: e.target.value })\r\n//           }\r\n//         />\r\n//         <select\r\n//           className=\"filter-input\"\r\n//           value={pendingFilters.genre}\r\n//           onChange={(e) =>\r\n//             setPendingFilters({ ...pendingFilters, genre: e.target.value })\r\n//           }\r\n//         >\r\n//           <option value=\"\">All Genres</option>\r\n//           <option value=\"Fiction\">Fiction</option>\r\n//           <option value=\"Science\">Science</option>\r\n//           <option value=\"Finance\">Finance</option>\r\n//           <option value=\"Self-help\">Self-help</option>\r\n//           <option value=\"Philosophy\">Philosophy</option>\r\n//           <option value=\"Biography\">Biography</option>\r\n//           <option value=\"Fantasy\">Fantasy</option>\r\n//           <option value=\"Romance\">Romance</option>\r\n//           <option value=\"Business\">Business</option>\r\n//           <option value=\"History\">History</option>\r\n//         </select>\r\n//         <select\r\n//           className=\"filter-input\"\r\n//           value={pendingFilters.availability}\r\n//           onChange={(e) =>\r\n//             setPendingFilters({\r\n//               ...pendingFilters,\r\n//               availability: e.target.value\r\n//             })\r\n//           }\r\n//         >\r\n//           <option value=\"\">All</option>\r\n//           <option value=\"true\">Available</option>\r\n//           <option value=\"false\">Borrowed</option>\r\n//         </select>\r\n//         <select\r\n//           className=\"filter-input\"\r\n//           value={pendingFilters.sortBy}\r\n//           onChange={(e) =>\r\n//             setPendingFilters({ ...pendingFilters, sortBy: e.target.value })\r\n//           }\r\n//         >\r\n//           <option value=\"\">Sort By</option>\r\n//           <option value=\"title\">Title (A-Z)</option>\r\n//           <option value=\"priceLowHigh\">Price: Low to High</option>\r\n//           <option value=\"priceHighLow\">Price: High to Low</option>\r\n//           <option value=\"availability\">Availability</option>\r\n//         </select>\r\n\r\n//         {/* Price Slider */}\r\n//         <div className=\"price-slider\">\r\n//           <span>₹{pendingFilters.priceRange[0]}</span>\r\n//           <input\r\n//             type=\"range\"\r\n//             min=\"0\"\r\n//             max=\"1000\"\r\n//             step=\"50\"\r\n//             value={pendingFilters.priceRange[0]}\r\n//             onChange={(e) =>\r\n//               setPendingFilters({\r\n//                 ...pendingFilters,\r\n//                 priceRange: [parseInt(e.target.value), pendingFilters.priceRange[1]]\r\n//               })\r\n//             }\r\n//           />\r\n//           <input\r\n//             type=\"range\"\r\n//             min=\"0\"\r\n//             max=\"1000\"\r\n//             step=\"50\"\r\n//             value={pendingFilters.priceRange[1]}\r\n//             onChange={(e) =>\r\n//               setPendingFilters({\r\n//                 ...pendingFilters,\r\n//                 priceRange: [pendingFilters.priceRange[0], parseInt(e.target.value)]\r\n//               })\r\n//             }\r\n//           />\r\n//           <span>₹{pendingFilters.priceRange[1]}</span>\r\n//         </div>\r\n\r\n//         <button className=\"apply-button\" onClick={applyFilters}>\r\n//           ✅ Apply Filters\r\n//         </button>\r\n//       </div>\r\n\r\n//       {/* Active Filters */}\r\n//       <div className=\"active-filters\">\r\n//         {filters.genre && (\r\n//           <span className=\"filter-tag\">\r\n//             Genre: {filters.genre}{\" \"}\r\n//             <X size={14} onClick={() => removeFilter(\"genre\")} />\r\n//           </span>\r\n//         )}\r\n//         {filters.availability && (\r\n//           <span className=\"filter-tag\">\r\n//             {filters.availability === \"true\" ? \"Available\" : \"Borrowed\"}{\" \"}\r\n//             <X size={14} onClick={() => removeFilter(\"availability\")} />\r\n//           </span>\r\n//         )}\r\n//         {(filters.priceRange[0] !== 0 || filters.priceRange[1] !== 1000) && (\r\n//           <span className=\"filter-tag\">\r\n//             Price: ₹{filters.priceRange[0]}–₹{filters.priceRange[1]}{\" \"}\r\n//             <X size={14} onClick={() => removeFilter(\"price\")} />\r\n//           </span>\r\n//         )}\r\n//       </div>\r\n\r\n//       {/* Cart Info */}\r\n//       {totalSelected > 0 && (\r\n//         <div className=\"borrow-info\">\r\n//           ✅ {totalSelected} book(s) selected to borrow | Total Price: ₹\r\n//           {totalPrice.toFixed(2)}\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Book Cards */}\r\n//       <ul className=\"book-list\">\r\n//         {sortedBooks.map((book) => (\r\n//           <li\r\n//             key={book.id}\r\n//             className={`book-card ${\r\n//               selectedBooks.find((b) => b.id === book.id) ? \"selected\" : \"\"\r\n//             }`}\r\n//           >\r\n//             <h3>{book.title}</h3>\r\n//             <p>Genre: {book.genre}</p>\r\n//             <p>Status: {book.available ? \"Available\" : \"Borrowed\"}</p>\r\n//             <p>Price: ₹{parseFloat(book.price).toFixed(2)}</p>\r\n//             <div className=\"button-row\">\r\n//               <button className=\"book-button\" onClick={() => onSelectBook(book)}>\r\n//                 Details\r\n//               </button>\r\n//               <button className=\"book-button\" onClick={() => handleSelectBook(book)}>\r\n//                 {selectedBooks.find((b) => b.id === book.id) ? \"Remove\" : \"Select\"}\r\n//               </button>\r\n//               {book.available && (\r\n//                 <button\r\n//                   className=\"book-button borrow\"\r\n//                   onClick={() => onBorrow(book)}\r\n//                 >\r\n//                   Borrow\r\n//                 </button>\r\n//               )}\r\n//             </div>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n// import { useEffect, useState } from \"react\";\r\n// import { X } from \"lucide-react\";\r\n// import BookDetailModal from \"./BookDetailModal\"; // Make sure this is correctly imported\r\n\r\n// export default function BookList({ onBorrow }) {\r\n//   const [books, setBooks] = useState([]);\r\n//   const [selectedBooks, setSelectedBooks] = useState([]);\r\n//   const [selectedBook, setSelectedBook] = useState(null); // For modal\r\n\r\n//   // Filters before Apply\r\n//   const [pendingFilters, setPendingFilters] = useState({\r\n//     search: \"\",\r\n//     genre: \"\",\r\n//     availability: \"\",\r\n//     priceRange: [0, 1000],\r\n//     sortBy: \"\"\r\n//   });\r\n\r\n//   const [filters, setFilters] = useState(pendingFilters);\r\n\r\n//   // useEffect(() => {\r\n//   //   fetch(\"http://127.0.0.1:5000/api/books\")\r\n//   //     .then((res) => res.json())\r\n//   //     .then((data) => setBooks(data))\r\n//   //     .catch((err) => console.error(\"Failed to fetch books:\", err));\r\n//   // }, []);\r\n\r\n//   useEffect(() => {\r\n//   fetch(\"http://127.0.0.1:5000/api/books\")\r\n//     .then((res) => res.json())\r\n//     .then((data) => {\r\n//       const normalized = data.map(book => ({\r\n//         ...book,\r\n//         available: book.available === true || book.available === 1 || book.available === \"1\"\r\n//       }));\r\n//       setBooks(normalized);\r\n//     })\r\n//     .catch((err) => console.error(\"Failed to fetch books:\", err));\r\n// }, []);\r\n\r\n\r\n//   const handleSelectBook = (book) => {\r\n//     if (selectedBooks.find((b) => b.id === book.id)) {\r\n//       setSelectedBooks(selectedBooks.filter((b) => b.id !== book.id));\r\n//     } else {\r\n//       setSelectedBooks([...selectedBooks, book]);\r\n//     }\r\n//   };\r\n\r\n//   const removeFilter = (type) => {\r\n//     const updated = { ...filters };\r\n//     if (type === \"genre\") updated.genre = \"\";\r\n//     if (type === \"availability\") updated.availability = \"\";\r\n//     if (type === \"price\") updated.priceRange = [0, 1000];\r\n//     setPendingFilters(updated);\r\n//     setFilters(updated);\r\n//   };\r\n\r\n//   const applyFilters = () => {\r\n//     setFilters({ ...pendingFilters });\r\n//   };\r\n\r\n//   const filteredBooks = books\r\n//     .filter((book) =>\r\n//       book.title.toLowerCase().includes(filters.search.toLowerCase())\r\n//     )\r\n//     .filter((book) => (filters.genre ? book.genre === filters.genre : true))\r\n//     .filter((book) =>\r\n//       filters.availability === \"true\"\r\n//         ? book.available === true\r\n//         : filters.availability === \"false\"\r\n//         ? book.available === false\r\n//         : true\r\n//     )\r\n//     .filter(\r\n//       (book) =>\r\n//         parseFloat(book.price) >= filters.priceRange[0] &&\r\n//         parseFloat(book.price) <= filters.priceRange[1]\r\n//     );\r\n\r\n//   const sortedBooks = [...filteredBooks].sort((a, b) => {\r\n//     if (filters.sortBy === \"title\") return a.title.localeCompare(b.title);\r\n//     if (filters.sortBy === \"priceLowHigh\") return a.price - b.price;\r\n//     if (filters.sortBy === \"priceHighLow\") return b.price - a.price;\r\n//     if (filters.sortBy === \"availability\") return b.available - a.available;\r\n//     return 0;\r\n//   });\r\n\r\n//   const totalSelected = selectedBooks.length;\r\n//   const totalPrice = selectedBooks.reduce((sum, b) => sum + parseFloat(b.price), 0);\r\n\r\n//   return (\r\n//     <div>\r\n//       <div className=\"filter-section\">\r\n//         <input\r\n//           className=\"filter-input\"\r\n//           placeholder=\"Search by title...\"\r\n//           value={pendingFilters.search}\r\n//           onChange={(e) =>\r\n//             setPendingFilters({ ...pendingFilters, search: e.target.value })\r\n//           }\r\n//         />\r\n//         <select\r\n//           className=\"filter-input\"\r\n//           value={pendingFilters.genre}\r\n//           onChange={(e) =>\r\n//             setPendingFilters({ ...pendingFilters, genre: e.target.value })\r\n//           }\r\n//         >\r\n//           <option value=\"\">All Genres</option>\r\n//           <option value=\"Fiction\">Fiction</option>\r\n//           <option value=\"Science\">Science</option>\r\n//           <option value=\"Finance\">Finance</option>\r\n//           <option value=\"Self-help\">Self-help</option>\r\n//           <option value=\"Philosophy\">Philosophy</option>\r\n//           <option value=\"Biography\">Biography</option>\r\n//           <option value=\"Fantasy\">Fantasy</option>\r\n//           <option value=\"Romance\">Romance</option>\r\n//           <option value=\"Business\">Business</option>\r\n//           <option value=\"History\">History</option>\r\n//         </select>\r\n//         <select\r\n//           className=\"filter-input\"\r\n//           value={pendingFilters.availability}\r\n//           onChange={(e) =>\r\n//             setPendingFilters({\r\n//               ...pendingFilters,\r\n//               availability: e.target.value\r\n//             })\r\n//           }\r\n//         >\r\n//           <option value=\"\">All</option>\r\n//           <option value=\"true\">Available</option>\r\n//           <option value=\"false\">Borrowed</option>\r\n//         </select>\r\n//         <select\r\n//           className=\"filter-input\"\r\n//           value={pendingFilters.sortBy}\r\n//           onChange={(e) =>\r\n//             setPendingFilters({ ...pendingFilters, sortBy: e.target.value })\r\n//           }\r\n//         >\r\n//           <option value=\"\">Sort By</option>\r\n//           <option value=\"title\">Title (A-Z)</option>\r\n//           <option value=\"priceLowHigh\">Price: Low to High</option>\r\n//           <option value=\"priceHighLow\">Price: High to Low</option>\r\n//           <option value=\"availability\">Availability</option>\r\n//         </select>\r\n\r\n//         {/* Price Slider */}\r\n//         <div className=\"price-slider\">\r\n//           <span>₹{pendingFilters.priceRange[0]}</span>\r\n//           <input\r\n//             type=\"range\"\r\n//             min=\"0\"\r\n//             max=\"1000\"\r\n//             step=\"50\"\r\n//             value={pendingFilters.priceRange[0]}\r\n//             onChange={(e) =>\r\n//               setPendingFilters({\r\n//                 ...pendingFilters,\r\n//                 priceRange: [parseInt(e.target.value), pendingFilters.priceRange[1]]\r\n//               })\r\n//             }\r\n//           />\r\n//           <input\r\n//             type=\"range\"\r\n//             min=\"0\"\r\n//             max=\"1000\"\r\n//             step=\"50\"\r\n//             value={pendingFilters.priceRange[1]}\r\n//             onChange={(e) =>\r\n//               setPendingFilters({\r\n//                 ...pendingFilters,\r\n//                 priceRange: [pendingFilters.priceRange[0], parseInt(e.target.value)]\r\n//               })\r\n//             }\r\n//           />\r\n//           <span>₹{pendingFilters.priceRange[1]}</span>\r\n//         </div>\r\n\r\n//         <button className=\"apply-button\" onClick={applyFilters}>\r\n//           ✅ Apply Filters\r\n//         </button>\r\n//       </div>\r\n\r\n//       {/* Active Filters */}\r\n//       <div className=\"active-filters\">\r\n//         {filters.genre && (\r\n//           <span className=\"filter-tag\">\r\n//             Genre: {filters.genre} <X size={14} onClick={() => removeFilter(\"genre\")} />\r\n//           </span>\r\n//         )}\r\n//         {filters.availability && (\r\n//           <span className=\"filter-tag\">\r\n//             {filters.availability === \"true\" ? \"Available\" : \"Borrowed\"}{\" \"}\r\n//             <X size={14} onClick={() => removeFilter(\"availability\")} />\r\n//           </span>\r\n//         )}\r\n//         {(filters.priceRange[0] !== 0 || filters.priceRange[1] !== 1000) && (\r\n//           <span className=\"filter-tag\">\r\n//             Price: ₹{filters.priceRange[0]}–₹{filters.priceRange[1]}{\" \"}\r\n//             <X size={14} onClick={() => removeFilter(\"price\")} />\r\n//           </span>\r\n//         )}\r\n//       </div>\r\n\r\n//       {/* Cart Info */}\r\n//       {totalSelected > 0 && (\r\n//         <div className=\"borrow-info\">\r\n//           ✅ {totalSelected} book(s) selected | Total Price: ₹\r\n//           {totalPrice.toFixed(2)}\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Book Cards */}\r\n//       <ul className=\"book-list\">\r\n//         {sortedBooks.map((book) => (\r\n//           <li\r\n//             key={book.id}\r\n//             className={`book-card ${\r\n//               selectedBooks.find((b) => b.id === book.id) ? \"selected\" : \"\"\r\n//             }`}\r\n//           >\r\n//             <h3 onClick={() => setSelectedBook(book)} style={{ cursor: \"pointer\" }}>\r\n//               {book.title}\r\n//             </h3>\r\n//             <p>Genre: {book.genre}</p>\r\n//             <p>Status: {book.available ? \"Available\" : \"Borrowed\"}</p>\r\n//             <p>Price: ₹{parseFloat(book.price).toFixed(2)}</p>\r\n//             <div className=\"button-row\">\r\n//               <button className=\"book-button\" onClick={() => setSelectedBook(book)}>\r\n//                 Details\r\n//               </button>\r\n//               <button className=\"book-button\" onClick={() => handleSelectBook(book)}>\r\n//                 {selectedBooks.find((b) => b.id === book.id) ? \"Remove\" : \"Select\"}\r\n//               </button>\r\n//               {book.available && (\r\n//                 <button\r\n//                   className=\"book-button borrow\"\r\n//                   onClick={() => onBorrow(book)}\r\n//                 >\r\n//                   Borrow\r\n//                 </button>\r\n//               )}\r\n//             </div>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n\r\n//       {/* Book Detail Modal */}\r\n//       <BookDetailModal book={selectedBook} onClose={() => setSelectedBook(null)} />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { X, CheckCircle, XCircle } from \"lucide-react\";\r\nimport BookDetailModal from \"./BookDetailModal\";\r\n\r\nexport default function BookList({ onBorrow }) {\r\n  const [books, setBooks] = useState([]);\r\n  const [selectedBooks, setSelectedBooks] = useState([]);\r\n  const [selectedBook, setSelectedBook] = useState(null);\r\n\r\n  const [pendingFilters, setPendingFilters] = useState({\r\n    search: \"\",\r\n    genre: \"\",\r\n    availability: \"\",\r\n    priceRange: [0, 1000],\r\n    sortBy: \"\"\r\n  });\r\n\r\n  const [filters, setFilters] = useState(pendingFilters);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://127.0.0.1:5000/api/books\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const normalized = data.map(book => ({\r\n          ...book,\r\n          available: book.available === true || book.available === 1 || book.available === \"1\"\r\n        }));\r\n        setBooks(normalized);\r\n      })\r\n      .catch((err) => console.error(\"Failed to fetch books:\", err));\r\n  }, []);\r\n\r\n  const handleSelectBook = (book) => {\r\n    if (selectedBooks.find((b) => b.id === book.id)) {\r\n      setSelectedBooks(selectedBooks.filter((b) => b.id !== book.id));\r\n    } else {\r\n      setSelectedBooks([...selectedBooks, book]);\r\n    }\r\n  };\r\n\r\n  const removeFilter = (type) => {\r\n    const updated = { ...filters };\r\n    if (type === \"genre\") updated.genre = \"\";\r\n    if (type === \"availability\") updated.availability = \"\";\r\n    if (type === \"price\") updated.priceRange = [0, 1000];\r\n    setPendingFilters(updated);\r\n    setFilters(updated);\r\n  };\r\n\r\n  const applyFilters = () => {\r\n    setFilters({ ...pendingFilters });\r\n  };\r\n\r\n  const filteredBooks = books\r\n    .filter((book) =>\r\n      book.title.toLowerCase().includes(filters.search.toLowerCase())\r\n    )\r\n    .filter((book) => (filters.genre ? book.genre === filters.genre : true))\r\n    .filter((book) =>\r\n      filters.availability === \"true\"\r\n        ? book.available === true\r\n        : filters.availability === \"false\"\r\n        ? book.available === false\r\n        : true\r\n    )\r\n    .filter(\r\n      (book) =>\r\n        parseFloat(book.price) >= filters.priceRange[0] &&\r\n        parseFloat(book.price) <= filters.priceRange[1]\r\n    );\r\n\r\n  const sortedBooks = [...filteredBooks].sort((a, b) => {\r\n    if (filters.sortBy === \"title\") return a.title.localeCompare(b.title);\r\n    if (filters.sortBy === \"priceLowHigh\") return a.price - b.price;\r\n    if (filters.sortBy === \"priceHighLow\") return b.price - a.price;\r\n    if (filters.sortBy === \"availability\") return b.available - a.available;\r\n    return 0;\r\n  });\r\n\r\n  const totalSelected = selectedBooks.length;\r\n  const totalPrice = selectedBooks.reduce((sum, b) => sum + parseFloat(b.price), 0);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"filter-section\">\r\n        <input\r\n          className=\"filter-input\"\r\n          placeholder=\"Search by title...\"\r\n          value={pendingFilters.search}\r\n          onChange={(e) =>\r\n            setPendingFilters({ ...pendingFilters, search: e.target.value })\r\n          }\r\n        />\r\n        <select\r\n          className=\"filter-input\"\r\n          value={pendingFilters.genre}\r\n          onChange={(e) =>\r\n            setPendingFilters({ ...pendingFilters, genre: e.target.value })\r\n          }\r\n        >\r\n          <option value=\"\">All Genres</option>\r\n          <option value=\"Fiction\">Fiction</option>\r\n          <option value=\"Science\">Science</option>\r\n          <option value=\"Finance\">Finance</option>\r\n          <option value=\"Self-help\">Self-help</option>\r\n          <option value=\"Philosophy\">Philosophy</option>\r\n          <option value=\"Biography\">Biography</option>\r\n          <option value=\"Fantasy\">Fantasy</option>\r\n          <option value=\"Romance\">Romance</option>\r\n          <option value=\"Business\">Business</option>\r\n          <option value=\"History\">History</option>\r\n        </select>\r\n        <select\r\n          className=\"filter-input\"\r\n          value={pendingFilters.availability}\r\n          onChange={(e) =>\r\n            setPendingFilters({\r\n              ...pendingFilters,\r\n              availability: e.target.value\r\n            })\r\n          }\r\n        >\r\n          <option value=\"\">All</option>\r\n          <option value=\"true\">Available</option>\r\n          <option value=\"false\">Borrowed</option>\r\n        </select>\r\n        <select\r\n          className=\"filter-input\"\r\n          value={pendingFilters.sortBy}\r\n          onChange={(e) =>\r\n            setPendingFilters({ ...pendingFilters, sortBy: e.target.value })\r\n          }\r\n        >\r\n          <option value=\"\">Sort By</option>\r\n          <option value=\"title\">Title (A-Z)</option>\r\n          <option value=\"priceLowHigh\">Price: Low to High</option>\r\n          <option value=\"priceHighLow\">Price: High to Low</option>\r\n          <option value=\"availability\">Availability</option>\r\n        </select>\r\n\r\n        <div className=\"price-slider\">\r\n          <span>₹{pendingFilters.priceRange[0]}</span>\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"1000\"\r\n            step=\"50\"\r\n            value={pendingFilters.priceRange[0]}\r\n            onChange={(e) =>\r\n              setPendingFilters({\r\n                ...pendingFilters,\r\n                priceRange: [parseInt(e.target.value), pendingFilters.priceRange[1]]\r\n              })\r\n            }\r\n          />\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"1000\"\r\n            step=\"50\"\r\n            value={pendingFilters.priceRange[1]}\r\n            onChange={(e) =>\r\n              setPendingFilters({\r\n                ...pendingFilters,\r\n                priceRange: [pendingFilters.priceRange[0], parseInt(e.target.value)]\r\n              })\r\n            }\r\n          />\r\n          <span>₹{pendingFilters.priceRange[1]}</span>\r\n        </div>\r\n\r\n         <div className=\"button-row\">\r\n  <div style={{ display: \"flex\", alignItems: \"center\", gap: \"8px\" }}>\r\n    <button className=\"book-button\" onClick={() => setSelectedBook(book)}>\r\n      Details\r\n    </button>\r\n    <span\r\n      style={{\r\n        padding: \"4px 8px\",\r\n        borderRadius: \"12px\",\r\n        fontSize: \"0.75rem\",\r\n        fontWeight: \"bold\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        gap: \"4px\",\r\n        backgroundColor: book.available ? \"#d4f5d1\" : \"#fcdcdc\",\r\n        color: book.available ? \"#1f7a1f\" : \"#b30000\",\r\n      }}\r\n    >\r\n      {book.available ? (\r\n        <>\r\n          <CheckCircle size={14} /> Available\r\n        </>\r\n      ) : (\r\n        <>\r\n          <XCircle size={14} /> Borrowed\r\n        </>\r\n      )}\r\n    </span>\r\n  </div>\r\n\r\n  <button className=\"book-button\" onClick={() => handleSelectBook(book)}>\r\n    {selectedBooks.find((b) => b.id === book.id) ? \"Remove\" : \"Select\"}\r\n  </button>\r\n\r\n  {book.available && (\r\n    <button\r\n      className=\"book-button borrow\"\r\n      onClick={() => onBorrow(book)}\r\n    >\r\n      Borrow\r\n    </button>\r\n  )}\r\n</div>\r\n\r\n        \r\n        \r\n      </div>\r\n\r\n      <div className=\"active-filters\">\r\n        {filters.genre && (\r\n          <span className=\"filter-tag\">\r\n            Genre: {filters.genre} <X size={14} onClick={() => removeFilter(\"genre\")} />\r\n          </span>\r\n        )}\r\n        {filters.availability && (\r\n          <span className=\"filter-tag\">\r\n            {filters.availability === \"true\" ? \"Available\" : \"Borrowed\"} <X size={14} onClick={() => removeFilter(\"availability\")} />\r\n          </span>\r\n        )}\r\n        {(filters.priceRange[0] !== 0 || filters.priceRange[1] !== 1000) && (\r\n          <span className=\"filter-tag\">\r\n            Price: ₹{filters.priceRange[0]}–₹{filters.priceRange[1]} <X size={14} onClick={() => removeFilter(\"price\")} />\r\n          </span>\r\n        )}\r\n      </div>\r\n\r\n      {totalSelected > 0 && (\r\n        <div className=\"borrow-info\">\r\n          ✅ {totalSelected} book(s) selected | Total Price: ₹{totalPrice.toFixed(2)}\r\n        </div>\r\n      )}\r\n\r\n      <ul className=\"book-list\">\r\n        {sortedBooks.map((book) => (\r\n          <li\r\n            key={book.id}\r\n            className={`book-card ${selectedBooks.find((b) => b.id === book.id) ? \"selected\" : \"\"}`}\r\n          >\r\n            <h3 onClick={() => setSelectedBook(book)} style={{ cursor: \"pointer\" }}>\r\n              {book.title}\r\n            </h3>\r\n            <p>Genre: {book.genre}</p>\r\n            <p>Status: {book.available ? (\r\n              <span style={{ color: \"green\", display: \"flex\", alignItems: \"center\", gap: \"6px\" }}>\r\n                <CheckCircle size={16} /> Available\r\n              </span>\r\n            ) : (\r\n              <span style={{ color: \"red\", display: \"flex\", alignItems: \"center\", gap: \"6px\" }}>\r\n                <XCircle size={16} /> Borrowed\r\n              </span>\r\n            )}</p>\r\n            <p>Price: ₹{parseFloat(book.price).toFixed(2)}</p>\r\n            <div className=\"button-row\">\r\n              <button className=\"book-button\" onClick={() => setSelectedBook(book)}>\r\n                Details\r\n              </button>\r\n              <button className=\"book-button\" onClick={() => handleSelectBook(book)}>\r\n                {selectedBooks.find((b) => b.id === book.id) ? \"Remove\" : \"Select\"}\r\n              </button>\r\n              {book.available && (\r\n                <button\r\n                  className=\"book-button borrow\"\r\n                  onClick={() => onBorrow(book)}\r\n                >\r\n                  Borrow\r\n                </button>\r\n              )}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <BookDetailModal book={selectedBook} onClose={() => setSelectedBook(null)} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}